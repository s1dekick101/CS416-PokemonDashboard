<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0415.1144                               -->
<workbook original-version='18.1' source-build='2022.1.1 (20221.22.0415.1144)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <VizInTooltipHideWorksheet />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Pokemon_All' inline='true' name='federated.1topkd20ssvxfz12vrf3c0w2o0l7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Pokemon_All' name='textscan.194u9ut0nh3zbu1clrfja0ul4jol'>
            <connection class='textscan' directory='C:/Users/nicbr/Desktop/School/UIUC/Data Visualization/Dashboard' filename='Pokemon_All.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.194u9ut0nh3zbu1clrfja0ul4jol' name='Pokemon_All.csv' table='[Pokemon_All#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='#' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Type 1' ordinal='3' />
            <column datatype='string' name='Type 2' ordinal='4' />
            <column datatype='integer' name='Total' ordinal='5' />
            <column datatype='integer' name='HP' ordinal='6' />
            <column datatype='integer' name='Attack' ordinal='7' />
            <column datatype='integer' name='Defense' ordinal='8' />
            <column datatype='integer' name='Sp. Atk' ordinal='9' />
            <column datatype='integer' name='Sp. Def' ordinal='10' />
            <column datatype='integer' name='Speed' ordinal='11' />
            <column datatype='integer' name='Generation' ordinal='12' />
            <column datatype='boolean' name='Legendary' ordinal='13' />
            <column datatype='integer' name='CatchRate' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.194u9ut0nh3zbu1clrfja0ul4jol' name='Pokemon_All.csv' table='[Pokemon_All#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='#' ordinal='1' />
            <column datatype='string' name='Name' ordinal='2' />
            <column datatype='string' name='Type 1' ordinal='3' />
            <column datatype='string' name='Type 2' ordinal='4' />
            <column datatype='integer' name='Total' ordinal='5' />
            <column datatype='integer' name='HP' ordinal='6' />
            <column datatype='integer' name='Attack' ordinal='7' />
            <column datatype='integer' name='Defense' ordinal='8' />
            <column datatype='integer' name='Sp. Atk' ordinal='9' />
            <column datatype='integer' name='Sp. Def' ordinal='10' />
            <column datatype='integer' name='Speed' ordinal='11' />
            <column datatype='integer' name='Generation' ordinal='12' />
            <column datatype='boolean' name='Legendary' ordinal='13' />
            <column datatype='integer' name='CatchRate' ordinal='14' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#</remote-name>
            <remote-type>20</remote-type>
            <local-name>[#]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>#</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type 1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type 1]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>Type 1</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Type 2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Type 2]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>Type 2</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>Total</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>HP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[HP]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>HP</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Attack</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Attack]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>Attack</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Defense</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Defense]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>Defense</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sp. Atk</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sp. Atk]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>Sp. Atk</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sp. Def</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sp. Def]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>Sp. Def</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Speed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Speed]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>Speed</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Generation</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Generation]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>Generation</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Legendary</remote-name>
            <remote-type>11</remote-type>
            <local-name>[Legendary]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>Legendary</remote-alias>
            <ordinal>13</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CatchRate</remote-name>
            <remote-type>20</remote-type>
            <local-name>[CatchRate]</local-name>
            <parent-name>[Pokemon_All.csv]</parent-name>
            <remote-alias>CatchRate</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Total:qk]&quot;' value='Gotta Catch &apos;Em All!' />
        </aliases>
      </column>
      <column caption='Legendaries' datatype='string' name='[Calculation_334673789543669760]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Legendary] == True THEN &quot;Legendaries&quot; ELSE &quot;Non-Legendaries&quot; END' />
      </column>
      <column caption='Number of Pokemon' datatype='real' name='[Calculation_812055350062862336]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([__tableau_internal_object_id__].[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6])/2' />
      </column>
      <column caption='Type Two' datatype='string' name='[Calculation_903253242483998720]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IFNULL([Type 2],&quot;&quot;)' />
      </column>
      <column caption='Type One' datatype='string' name='[Calculation_903253242484363265]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Type 1]' />
      </column>
      <column caption='Catch Rate' datatype='integer' name='[CatchRate]' role='measure' type='quantitative' />
      <column datatype='integer' hidden='true' name='[F1]' role='measure' type='quantitative' />
      <column datatype='string' name='[Name]' role='dimension' type='nominal' />
      <column caption='Total Stats' datatype='integer' name='[Total]' role='measure' type='quantitative' />
      <column datatype='string' name='[Type 1]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Pokemon_All.csv' datatype='table' name='[__tableau_internal_object_id__].[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]' role='measure' type='quantitative' />
      <column-instance column='[Calculation_334673789543669760]' derivation='None' name='[none:Calculation_334673789543669760:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_903253242483998720]' derivation='None' name='[none:Calculation_903253242483998720:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_903253242484363265]' derivation='None' name='[none:Calculation_903253242484363265:nk]' pivot='key' type='nominal' />
      <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Type 1]' derivation='None' name='[none:Type 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Inclusions (Name,Type One,Type Two)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Name:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_903253242484363265:nk]' />
          <groupfilter function='level-members' level='[none:Calculation_903253242483998720:nk]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Type Two,Type One)' hidden='true' name='[Tooltip (Type Two,Type One)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_903253242483998720]' />
          <groupfilter function='level-members' level='[Calculation_903253242484363265]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Type Two,Type One,Type 1)' hidden='true' name='[Tooltip (Type Two,Type One,Type 1)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_903253242483998720]' />
          <groupfilter function='level-members' level='[Calculation_903253242484363265]' />
          <groupfilter function='level-members' level='[Type 1]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' rowDisplayCount='10000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Type 1:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ghost&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bug&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fairy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grass&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fighting&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poison&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Psychic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Water&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ground&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flying&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dragon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ice&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Electric&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_903253242484363265:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ghost&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bug&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fairy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grass&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fighting&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Poison&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Psychic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Water&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ground&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Flying&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dragon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rock&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ice&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Electric&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_334673789543669760:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Legendaries&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Non-Legendaries&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Pokemon_All.csv' id='Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6'>
            <properties context=''>
              <relation connection='textscan.194u9ut0nh3zbu1clrfja0ul4jol' name='Pokemon_All.csv' table='[Pokemon_All#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='#' ordinal='1' />
                  <column datatype='string' name='Name' ordinal='2' />
                  <column datatype='string' name='Type 1' ordinal='3' />
                  <column datatype='string' name='Type 2' ordinal='4' />
                  <column datatype='integer' name='Total' ordinal='5' />
                  <column datatype='integer' name='HP' ordinal='6' />
                  <column datatype='integer' name='Attack' ordinal='7' />
                  <column datatype='integer' name='Defense' ordinal='8' />
                  <column datatype='integer' name='Sp. Atk' ordinal='9' />
                  <column datatype='integer' name='Sp. Def' ordinal='10' />
                  <column datatype='integer' name='Speed' ordinal='11' />
                  <column datatype='integer' name='Generation' ordinal='12' />
                  <column datatype='boolean' name='Legendary' ordinal='13' />
                  <column datatype='integer' name='CatchRate' ordinal='14' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <shared-views>
    <shared-view name='federated.1topkd20ssvxfz12vrf3c0w2o0l7'>
      <datasources>
        <datasource caption='Pokemon_All' name='federated.1topkd20ssvxfz12vrf3c0w2o0l7' />
      </datasources>
      <datasource-dependencies datasource='federated.1topkd20ssvxfz12vrf3c0w2o0l7'>
        <column caption='Legendaries' datatype='string' name='[Calculation_334673789543669760]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [Legendary] == True THEN &quot;Legendaries&quot; ELSE &quot;Non-Legendaries&quot; END' />
        </column>
        <column caption='Type Two' datatype='string' name='[Calculation_903253242483998720]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IFNULL([Type 2],&quot;&quot;)' />
        </column>
        <column caption='Type One' datatype='string' name='[Calculation_903253242484363265]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Type 1]' />
        </column>
        <column datatype='integer' name='[Generation]' role='measure' type='quantitative' />
        <column datatype='string' name='[Name]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_334673789543669760]' derivation='None' name='[none:Calculation_334673789543669760:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_903253242483998720]' derivation='None' name='[none:Calculation_903253242483998720:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_903253242484363265]' derivation='None' name='[none:Calculation_903253242484363265:nk]' pivot='key' type='nominal' />
        <column-instance column='[Generation]' derivation='None' name='[none:Generation:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_334673789543669760:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_334673789543669760:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_334673789543669760:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_903253242483998720:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]' />
      </filter>
      <filter class='categorical' column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]'>
        <groupfilter function='level-members' level='[none:Calculation_903253242484363265:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]' />
      </filter>
      <filter class='quantitative' column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Generation:qk]' included-values='in-range-or-null'>
        <min>1</min>
        <max>6</max>
      </filter>
      <filter class='categorical' column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Name:nk]'>
        <groupfilter function='level-members' level='[none:Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        <target field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Name:nk]' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Pokedex'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' italic='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pokemon_All' name='federated.1topkd20ssvxfz12vrf3c0w2o0l7' />
          </datasources>
          <datasource-dependencies datasource='federated.1topkd20ssvxfz12vrf3c0w2o0l7'>
            <column datatype='integer' name='[Attack]' role='measure' type='quantitative' />
            <column caption='Legendaries' datatype='string' name='[Calculation_334673789543669760]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Legendary] == True THEN &quot;Legendaries&quot; ELSE &quot;Non-Legendaries&quot; END' />
            </column>
            <column caption='Type Two' datatype='string' name='[Calculation_903253242483998720]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([Type 2],&quot;&quot;)' />
            </column>
            <column caption='Type One' datatype='string' name='[Calculation_903253242484363265]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Type 1]' />
            </column>
            <column caption='Catch Rate' datatype='integer' name='[CatchRate]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Defense]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Generation]' role='measure' type='quantitative' />
            <column datatype='integer' name='[HP]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Legendary]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sp. Atk]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Sp. Def]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Speed]' role='measure' type='quantitative' />
            <column caption='Total Stats' datatype='integer' name='[Total]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type 1]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type 2]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_334673789543669760]' derivation='None' name='[none:Calculation_334673789543669760:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_903253242483998720]' derivation='None' name='[none:Calculation_903253242483998720:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_903253242484363265]' derivation='None' name='[none:Calculation_903253242484363265:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Attack]' derivation='Sum' name='[sum:Attack:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CatchRate]' derivation='Sum' name='[sum:CatchRate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Defense]' derivation='Sum' name='[sum:Defense:qk]' pivot='key' type='quantitative' />
            <column-instance column='[HP]' derivation='Sum' name='[sum:HP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sp. Atk]' derivation='Sum' name='[sum:Sp. Atk:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sp. Def]' derivation='Sum' name='[sum:Sp. Def:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Speed]' derivation='Sum' name='[sum:Speed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total]' derivation='Sum' name='[sum:Total:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[Inclusions (Name,Type One,Type Two)]'>
            <groupfilter function='reorder-dimensionality' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Bug&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Accelgor&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Burmy&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cascoon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Caterpie&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Illumise&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Karrablast&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kricketot&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kricketune&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Metapod&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pineco&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pinsir&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Scatterbug&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shelmet&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Silcoon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Spewpa&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Volbeat&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wurmple&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Electric&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Galvantula&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Joltik&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fighting&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Heracross&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;HeracrossMega Heracross&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fire&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Larvesta&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Volcarona&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Beautifly&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Butterfree&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Combee&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ledian&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ledyba&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Masquerain&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mothim&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ninjask&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;PinsirMega Pinsir&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Scyther&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vespiquen&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vivillon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Yanma&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Yanmega&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ghost&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shedinja&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Grass&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Leavanny&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Paras&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Parasect&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sewaddle&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Swadloon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;WormadamPlant Cloak&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ground&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nincada&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;WormadamSandy Cloak&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Poison&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ariados&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Beedrill&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;BeedrillMega Beedrill&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dustox&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kakuna&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Scolipede&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Spinarak&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Venipede&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Venomoth&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Venonat&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Weedle&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Whirlipede&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Rock&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Crustle&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dwebble&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shuckle&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Steel&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Durant&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Escavalier&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Forretress&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Genesect&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Scizor&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;ScizorMega Scizor&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;WormadamTrash Cloak&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Water&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Surskit&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Dark&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Absol&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;AbsolMega Absol&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Darkrai&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Liepard&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mightyena&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Poochyena&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Purrloin&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Umbreon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zoroark&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zorua&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dragon&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Deino&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hydreigon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zweilous&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fighting&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Scrafty&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Scraggy&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fire&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Houndoom&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;HoundoomMega Houndoom&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Houndour&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Honchkrow&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mandibuzz&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Murkrow&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vullaby&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Yveltal&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ghost&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sableye&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;SableyeMega Sableye&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ice&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sneasel&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Weavile&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Psychic&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Inkay&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Malamar&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Steel&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bisharp&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pawniard&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Dragon&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Axew&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bagon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dragonair&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dratini&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Druddigon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Fraxure&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Goodra&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Goomy&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Haxorus&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shelgon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sliggoo&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Electric&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zekrom&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fairy&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;AltariaMega Altaria&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fire&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Reshiram&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Altaria&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dragonite&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rayquaza&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;RayquazaMega Rayquaza&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Salamence&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;SalamenceMega Salamence&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ground&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gabite&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Garchomp&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;GarchompMega Garchomp&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gible&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zygarde50\% Forme&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ice&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kyurem&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;KyuremBlack Kyurem&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;KyuremWhite Kyurem&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Psychic&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Latias&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;LatiasMega Latias&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Latios&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;LatiosMega Latios&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Electric&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ampharos&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Blitzle&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Eelektrik&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Eelektross&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Electabuzz&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Electivire&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Electrike&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Electrode&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Elekid&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Flaaffy&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jolteon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Luxio&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Luxray&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Manectric&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;ManectricMega Manectric&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mareep&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Minun&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pachirisu&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pichu&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pikachu&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Plusle&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Raichu&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Raikou&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shinx&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tynamo&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Voltorb&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zebstrika&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dragon&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;AmpharosMega Ampharos&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fairy&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dedenne&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fire&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;RotomHeat Rotom&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Emolga&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;RotomFan Rotom&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;ThundurusIncarnate Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;ThundurusTherian Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zapdos&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ghost&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rotom&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Grass&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;RotomMow Rotom&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ice&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;RotomFrost Rotom&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Normal&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Heliolisk&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Helioptile&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Steel&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Magnemite&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Magneton&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Magnezone&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Water&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;RotomWash Rotom&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Fairy&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Aromatisse&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Clefable&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Clefairy&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cleffa&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Flabébé&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Floette&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Florges&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Granbull&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Slurpuff&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Snubbull&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Spritzee&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Swirlix&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sylveon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Togepi&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Xerneas&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Togekiss&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Togetic&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Fighting&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Conkeldurr&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gurdurr&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hariyama&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hitmonchan&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hitmonlee&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hitmontop&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Machamp&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Machoke&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Machop&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Makuhita&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mankey&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mienfoo&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mienshao&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pancham&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Primeape&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Riolu&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sawk&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Throh&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Timburr&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tyrogue&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dark&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pangoro&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hawlucha&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Psychic&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Medicham&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;MedichamMega Medicham&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Meditite&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Steel&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lucario&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;LucarioMega Lucario&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Fire&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Arcanine&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Braixen&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Charmander&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Charmeleon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chimchar&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cyndaquil&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;DarmanitanStandard Mode&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Darumaka&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Entei&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Fennekin&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Flareon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Growlithe&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Heatmor&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Magby&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Magmar&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Magmortar&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ninetales&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pansear&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ponyta&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Quilava&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rapidash&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Simisear&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Slugma&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tepig&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Torchic&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Torkoal&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Typhlosion&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vulpix&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dragon&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;CharizardMega Charizard X&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fighting&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Blaziken&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;BlazikenMega Blaziken&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Combusken&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Emboar&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Infernape&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Monferno&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pignite&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Charizard&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;CharizardMega Charizard Y&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Fletchinder&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ho-oh&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Moltres&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Talonflame&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ground&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Camerupt&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;CameruptMega Camerupt&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Numel&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Normal&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Litleo&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pyroar&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Psychic&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;DarmanitanZen Mode&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Delphox&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Rock&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Magcargo&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Steel&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Heatran&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Water&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Volcanion&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Flying&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;TornadusIncarnate Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;TornadusTherian Forme&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dragon&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Noibat&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Noivern&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Ghost&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Banette&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;BanetteMega Banette&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cofagrigus&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dusclops&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dusknoir&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Duskull&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Misdreavus&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mismagius&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shuppet&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Yamask&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dark&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Spiritomb&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dragon&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;GiratinaAltered Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;GiratinaOrigin Forme&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fire&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chandelure&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lampent&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Litwick&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Drifblim&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Drifloon&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Grass&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;GourgeistAverage Size&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;GourgeistLarge Size&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;GourgeistSmall Size&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;GourgeistSuper Size&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Phantump&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;PumpkabooAverage Size&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;PumpkabooLarge Size&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;PumpkabooSmall Size&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;PumpkabooSuper Size&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Trevenant&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Poison&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gastly&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gengar&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;GengarMega Gengar&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Haunter&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Grass&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bayleef&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bellossom&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cacnea&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Carnivine&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cherrim&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cherubi&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chespin&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chikorita&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gogoat&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grotle&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grovyle&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Leafeon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lilligant&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Maractus&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Meganium&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pansage&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Petilil&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Quilladin&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sceptile&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Seedot&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Serperior&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Servine&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;ShayminLand Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shroomish&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Simisage&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Skiddo&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Snivy&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sunflora&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sunkern&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tangela&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tangrowth&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Treecko&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Turtwig&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dark&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cacturne&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nuzleaf&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shiftry&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dragon&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;SceptileMega Sceptile&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fairy&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cottonee&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Whimsicott&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fighting&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Breloom&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chesnaught&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Virizion&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hoppip&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jumpluff&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;ShayminSky Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Skiploom&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tropius&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ground&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Torterra&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ice&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Abomasnow&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;AbomasnowMega Abomasnow&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Snover&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Poison&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Amoonguss&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bellsprout&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Budew&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bulbasaur&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Foongus&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gloom&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ivysaur&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Oddish&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Roselia&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Roserade&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Venusaur&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;VenusaurMega Venusaur&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Victreebel&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vileplume&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Weepinbell&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Psychic&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Exeggcute&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Exeggutor&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Steel&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ferroseed&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ferrothorn&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Ground&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cubone&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Diglett&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Donphan&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Drilbur&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dugtrio&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Groudon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hippopotas&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hippowdon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Marowak&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Phanpy&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sandshrew&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sandslash&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Trapinch&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dark&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Krokorok&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Krookodile&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sandile&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dragon&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Flygon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vibrava&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Electric&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stunfisk&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fire&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;GroudonPrimal Groudon&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gligar&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gliscor&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;LandorusIncarnate Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;LandorusTherian Forme&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ghost&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Golett&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Golurk&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Psychic&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Baltoy&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Claydol&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Rock&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rhydon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rhyhorn&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rhyperior&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Steel&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Excadrill&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Ice&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Avalugg&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Beartic&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bergmite&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cryogonal&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cubchoo&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Glaceon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Glalie&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;GlalieMega Glalie&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Regice&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Snorunt&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vanillish&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vanillite&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vanilluxe&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Articuno&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Delibird&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ghost&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Froslass&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ground&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mamoswine&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Piloswine&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Swinub&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Psychic&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jynx&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Smoochum&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Water&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sealeo&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Spheal&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Walrein&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Normal&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Aipom&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ambipom&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Arceus&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Audino&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bidoof&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Blissey&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bouffalant&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Buneary&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bunnelby&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Castform&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chansey&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cinccino&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Delcatty&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ditto&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dunsparce&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Eevee&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Exploud&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Furfrou&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Furret&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Glameow&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Happiny&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Herdier&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kangaskhan&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;KangaskhanMega Kangaskhan&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kecleon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lickilicky&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lickitung&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lillipup&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Linoone&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lopunny&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Loudred&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Meowth&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Miltank&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Minccino&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Munchlax&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Patrat&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Persian&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Porygon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Porygon-Z&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Porygon2&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Purugly&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Raticate&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rattata&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Regigigas&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sentret&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Skitty&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Slaking&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Slakoth&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Smeargle&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Snorlax&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Spinda&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stantler&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stoutland&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tauros&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Teddiursa&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ursaring&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vigoroth&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Watchog&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Whismur&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zangoose&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zigzagoon&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fairy&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;AudinoMega Audino&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Azurill&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Igglybuff&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jigglypuff&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wigglytuff&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fighting&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;LopunnyMega Lopunny&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;MeloettaPirouette Forme&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Braviary&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chatot&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dodrio&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Doduo&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Farfetch&apos;d&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Fearow&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Fletchling&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hoothoot&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Noctowl&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pidgeot&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;PidgeotMega Pidgeot&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pidgeotto&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pidgey&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pidove&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rufflet&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Spearow&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Staraptor&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Staravia&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Starly&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Swablu&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Swellow&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Taillow&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tranquill&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Unfezant&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Grass&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Deerling&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sawsbuck&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ground&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Diggersby&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Psychic&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Girafarig&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;MeloettaAria Forme&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Water&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bibarel&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Poison&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Arbok&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ekans&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Garbodor&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grimer&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gulpin&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Koffing&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Muk&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nidoran♀&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nidoran♂&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nidorina&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nidorino&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Seviper&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Swalot&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Trubbish&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Weezing&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Bug&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Skorupi&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dark&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Drapion&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Skuntank&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Stunky&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dragon&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dragalge&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fighting&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Croagunk&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Toxicroak&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Crobat&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Golbat&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Zubat&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ground&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nidoking&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nidoqueen&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Water&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Skrelp&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Psychic&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Abra&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Alakazam&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;AlakazamMega Alakazam&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Azelf&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Beheeyem&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chimecho&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chingling&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cresselia&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;DeoxysAttack Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;DeoxysDefense Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;DeoxysNormal Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;DeoxysSpeed Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Drowzee&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Duosion&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Elgyem&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Espeon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Espurr&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gothita&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gothitelle&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gothorita&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Grumpig&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Hypno&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kadabra&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;MeowsticFemale&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;MeowsticMale&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mesprit&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mew&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mewtwo&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;MewtwoMega Mewtwo Y&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Munna&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Musharna&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Reuniclus&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Solosis&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Spoink&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Unown&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Uxie&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wobbuffet&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wynaut&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dark&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;HoopaHoopa Unbound&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fairy&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gardevoir&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;GardevoirMega Gardevoir&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kirlia&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mime Jr.&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mr. Mime&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ralts&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fighting&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gallade&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;GalladeMega Gallade&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;MewtwoMega Mewtwo X&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fire&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Victini&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lugia&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Natu&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sigilyph&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Swoobat&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Woobat&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Xatu&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ghost&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;HoopaHoopa Confined&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Grass&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Celebi&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Rock&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Boldore&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bonsly&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cranidos&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gigalith&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Nosepass&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Rampardos&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Regirock&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Roggenrola&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sudowoodo&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Bug&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Anorith&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Armaldo&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dark&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tyranitar&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;TyranitarMega Tyranitar&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dragon&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tyrantrum&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tyrunt&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fairy&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Carbink&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Diancie&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;DiancieMega Diancie&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fighting&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Terrakion&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Aerodactyl&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;AerodactylMega Aerodactyl&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Archen&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Archeops&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Grass&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cradily&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lileep&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ground&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Geodude&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Golem&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Graveler&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Larvitar&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Onix&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pupitar&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ice&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Amaura&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Aurorus&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Psychic&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lunatone&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Solrock&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Steel&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bastiodon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Probopass&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shieldon&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Water&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Barbaracle&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Binacle&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kabuto&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kabutops&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Omanyte&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Omastar&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Steel&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;AggronMega Aggron&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Klang&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Klink&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Klinklang&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Registeel&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dragon&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dialga&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fairy&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Klefki&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mawile&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;MawileMega Mawile&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fighting&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cobalion&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Skarmory&quot;' />
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ghost&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;AegislashBlade Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;AegislashShield Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Doublade&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Honedge&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ground&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Steelix&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;SteelixMega Steelix&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Psychic&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Beldum&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bronzong&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Bronzor&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jirachi&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Metagross&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;MetagrossMega Metagross&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Metang&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Rock&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Aggron&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Aron&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lairon&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:Calculation_903253242484363265:nk]' member='&quot;Water&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Alomomola&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Basculin&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Blastoise&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;BlastoiseMega Blastoise&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Buizel&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Clamperl&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Clauncher&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Clawitzer&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Corphish&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Croconaw&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dewott&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Feebas&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Feraligatr&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Finneon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Floatzel&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Froakie&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Frogadier&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Goldeen&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Golduck&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gorebyss&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Horsea&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Huntail&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kingler&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Krabby&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kyogre&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;KyogrePrimal Kyogre&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lumineon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Luvdisc&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Magikarp&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Manaphy&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Milotic&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mudkip&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Octillery&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Oshawott&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Panpour&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Phione&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Piplup&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Politoed&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Poliwag&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Poliwhirl&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Prinplup&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Psyduck&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Remoraid&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Samurott&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Seadra&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Seaking&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Seel&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shellder&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Shellos&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Simipour&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Squirtle&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Staryu&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Suicune&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Totodile&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tympole&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Vaporeon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wailmer&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wailord&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wartortle&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dark&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Carvanha&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Crawdaunt&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Greninja&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;GyaradosMega Gyarados&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Sharpedo&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;SharpedoMega Sharpedo&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Dragon&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Kingdra&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Palkia&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Electric&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Chinchou&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lanturn&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fairy&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Azumarill&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Marill&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Fighting&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;KeldeoOrdinary Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;KeldeoResolute Forme&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Poliwrath&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Flying&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ducklett&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gyarados&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mantine&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Mantyke&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Pelipper&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Swanna&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wingull&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ghost&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Frillish&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Jellicent&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Grass&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lombre&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lotad&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Ludicolo&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ground&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Barboach&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Gastrodon&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Marshtomp&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Palpitoad&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Quagsire&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Seismitoad&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Swampert&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;SwampertMega Swampert&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Whiscash&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Wooper&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Ice&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Cloyster&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Dewgong&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Lapras&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Poison&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Qwilfish&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tentacool&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tentacruel&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Psychic&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Slowbro&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;SlowbroMega Slowbro&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Slowking&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Slowpoke&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Starmie&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Rock&quot;' />
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Carracosta&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Corsola&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Relicanth&quot;' />
                        <groupfilter function='member' level='[none:Name:nk]' member='&quot;Tirtouga&quot;' />
                      </groupfilter>
                    </groupfilter>
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:Calculation_903253242483998720:nk]' member='&quot;Steel&quot;' />
                      <groupfilter function='member' level='[none:Name:nk]' member='&quot;Empoleon&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[none:Name:nk]' />
                <hierarchy name='[none:Calculation_903253242484363265:nk]' />
                <hierarchy name='[none:Calculation_903253242483998720:nk]' />
              </order>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Name:nk]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Generation:qk]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_334673789543669760:nk]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[Inclusions (Name,Type One,Type Two)]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:CatchRate:qk]' field-type='quantitative' max='260' min='0' range-type='fixed' reverse='true' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Total:qk]' field-type='quantitative' max='825' min='150' range-type='fixed' scope='rows' type='space' />
            <format attr='tick-color' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Total:qk]' value='#000000' />
            <format attr='tick-color' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:CatchRate:qk]' value='#000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[:Measure Names]' value='#000000' />
            <format attr='font-weight' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[:Measure Names]' value='bold' />
            <format attr='color' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:CatchRate:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:CatchRate:qk]' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Total:qk]' value='#e8edda' />
            <format attr='background-color' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[:Measure Names]' value='#ddebf0' />
            <format attr='background-color' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:CatchRate:qk]' value='#ddebf0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[:Measure Names]' value='#000000' />
            <format attr='font-weight' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[:Measure Names]' value='bold' />
            <format attr='color' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:CatchRate:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:CatchRate:qk]' value='bold' />
            <format attr='color' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Total:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Total:qk]' value='bold' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-color' value='#333333' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#e9ebe0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]' />
              <lod column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]' />
              <lod column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Name:nk]' />
              <lod column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:HP:qk]' />
              <lod column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Defense:qk]' />
              <lod column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Attack:qk]' />
              <lod column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Sp. Atk:qk]' />
              <lod column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Sp. Def:qk]' />
              <lod column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Speed:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Name:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Type One:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Type Two:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>Attack:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Attack:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Defense:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Defense:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>HP:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:HP:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sp. Atk:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Sp. Atk:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Sp. Def:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Sp. Def:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Speed:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Speed:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run fontcolor='#787878'>Total Stats:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Total:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5492265224456787' />
                <format attr='shape' value=':custom/Poké_Ball_icon.svg.png' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:Total:qk]</rows>
        <cols>([federated.1topkd20ssvxfz12vrf3c0w2o0l7].[:Measure Names] * [federated.1topkd20ssvxfz12vrf3c0w2o0l7].[sum:CatchRate:qk])</cols>
      </table>
      <simple-id uuid='{A67DAD15-3911-47CE-AE59-0ED1110E0814}' />
    </worksheet>
    <worksheet name='Pokemon List'>
      <table>
        <view>
          <datasources>
            <datasource caption='Pokemon_All' name='federated.1topkd20ssvxfz12vrf3c0w2o0l7' />
          </datasources>
          <datasource-dependencies datasource='federated.1topkd20ssvxfz12vrf3c0w2o0l7'>
            <column caption='Legendaries' datatype='string' name='[Calculation_334673789543669760]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Legendary] == True THEN &quot;Legendaries&quot; ELSE &quot;Non-Legendaries&quot; END' />
            </column>
            <column caption='Type Two' datatype='string' name='[Calculation_903253242483998720]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([Type 2],&quot;&quot;)' />
            </column>
            <column caption='Type One' datatype='string' name='[Calculation_903253242484363265]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Type 1]' />
            </column>
            <column datatype='integer' name='[Generation]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Legendary]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type 1]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type 2]' role='dimension' type='nominal' />
            <column-instance column='[Generation]' derivation='Attribute' name='[attr:Generation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_334673789543669760]' derivation='None' name='[none:Calculation_334673789543669760:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_903253242483998720]' derivation='None' name='[none:Calculation_903253242483998720:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_903253242484363265]' derivation='None' name='[none:Calculation_903253242484363265:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[Tooltip (Type Two,Type One)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Pokedex]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_903253242483998720]' />
              <groupfilter function='level-members' level='[Calculation_903253242484363265]' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[Tooltip (Type Two,Type One,Type 1)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action - Pokedex]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Calculation_903253242483998720]' />
              <groupfilter function='level-members' level='[Calculation_903253242484363265]' />
              <groupfilter function='level-members' level='[Type 1]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[Tooltip (Type Two,Type One)]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Generation:qk]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_334673789543669760:nk]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Name:nk]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[Tooltip (Type Two,Type One,Type 1)]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[attr:Generation:qk]' num-steps='5' palette='tableau-map-temperatur' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[attr:Generation:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{BF92CA2A-61AF-4CAD-A1F1-46DE72C1BFBF}' />
    </worksheet>
    <worksheet name='Pokemon Types'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000' italic='true'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Pokemon_All' name='federated.1topkd20ssvxfz12vrf3c0w2o0l7' />
          </datasources>
          <datasource-dependencies datasource='federated.1topkd20ssvxfz12vrf3c0w2o0l7'>
            <column caption='Legendaries' datatype='string' name='[Calculation_334673789543669760]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Legendary] == True THEN &quot;Legendaries&quot; ELSE &quot;Non-Legendaries&quot; END' />
            </column>
            <column caption='Type Two' datatype='string' name='[Calculation_903253242483998720]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IFNULL([Type 2],&quot;&quot;)' />
            </column>
            <column caption='Type One' datatype='string' name='[Calculation_903253242484363265]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Type 1]' />
            </column>
            <column datatype='integer' name='[Generation]' role='measure' type='quantitative' />
            <column datatype='boolean' name='[Legendary]' role='dimension' type='nominal' />
            <column datatype='string' name='[Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Type 1]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='Pokemon_All.csv' datatype='integer' name='[__tableau_internal_object_id__].[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]' role='measure' type='quantitative' />
            <column datatype='string' name='[Type 2]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Pokemon_All.csv' datatype='table' name='[__tableau_internal_object_id__].[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_334673789543669760]' derivation='None' name='[none:Calculation_334673789543669760:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_903253242483998720]' derivation='None' name='[none:Calculation_903253242483998720:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_903253242484363265]' derivation='None' name='[none:Calculation_903253242484363265:nk]' pivot='key' type='nominal' />
            <column-instance column='[Generation]' derivation='None' name='[none:Generation:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Generation:qk]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_334673789543669760:nk]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Name:nk]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]</column>
            <column>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]' value='#ddebf0' />
            <format attr='background-color' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]' value='#e8edda' />
            <format attr='font-weight' data-class='subtotal' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]' value='bold' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='background-color' value='#ddebf0' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='color' scope='rows' value='#000000' />
            <format attr='color' scope='cols' value='#000000' />
            <format attr='font-weight' scope='cols' value='bold' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]' value='#000000' />
            <format attr='font-weight' field='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-color' value='#ff9da7' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#e8edda' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[__tableau_internal_object_id__].[cnt:Pokemon_All.csv_A731318D4BC84391961E2B3CB846D5C6:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Type One:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Type Two:&#9;</run>
                <run bold='true'><![CDATA[<[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Pokemon:&#9;</run>
                <run>Æ&#10;</run>
                <run bold='true'>&lt;</run>
                <run bold='true'><![CDATA[Sheet name="Pokemon List" maxwidth="400" maxheight="800" filter="<All Fields>"]]></run>
                <run bold='true'>&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]</rows>
        <cols>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]</cols>
      </table>
      <simple-id uuid='{979317D1-507B-4437-90CE-A4233A0E1A25}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#f28e2b' fontname='Wide Latin' fontsize='22' italic='true'>Welcome  to  the  world  of  Pokemon!!! </run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#ddebf0' />
        </style-rule>
        <style-rule element='dash-title'>
          <format attr='text-align' value='center' />
          <format attr='border-color' value='#000000' />
          <format attr='color' value='#f9a655' />
          <format attr='background-color' value='#ffffff' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='1' />
        </style-rule>
        <style-rule element='dash-subtitle'>
          <format attr='color' value='#000000' />
          <format attr='font-weight' value='normal' />
        </style-rule>
        <style-rule element='dash-text'>
          <format attr='color' value='#000000' />
          <format attr='font-weight' value='bold' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Pokemon_All' name='federated.1topkd20ssvxfz12vrf3c0w2o0l7' />
      </datasources>
      <datasource-dependencies datasource='federated.1topkd20ssvxfz12vrf3c0w2o0l7'>
        <column caption='Legendaries' datatype='string' name='[Calculation_334673789543669760]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IF [Legendary] == True THEN &quot;Legendaries&quot; ELSE &quot;Non-Legendaries&quot; END' />
        </column>
        <column caption='Type Two' datatype='string' name='[Calculation_903253242483998720]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='IFNULL([Type 2],&quot;&quot;)' />
        </column>
        <column caption='Type One' datatype='string' name='[Calculation_903253242484363265]' role='dimension' type='nominal'>
          <calculation class='tableau' formula='[Type 1]' />
        </column>
        <column datatype='integer' name='[Generation]' role='measure' type='quantitative' />
        <column datatype='string' name='[Name]' role='dimension' type='nominal' />
        <column-instance column='[Calculation_334673789543669760]' derivation='None' name='[none:Calculation_334673789543669760:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_903253242483998720]' derivation='None' name='[none:Calculation_903253242483998720:nk]' pivot='key' type='nominal' />
        <column-instance column='[Calculation_903253242484363265]' derivation='None' name='[none:Calculation_903253242484363265:nk]' pivot='key' type='nominal' />
        <column-instance column='[Generation]' derivation='None' name='[none:Generation:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Name]' derivation='None' name='[none:Name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98230' id='77' param='horz' type-v2='layout-flow' w='99050' x='475' y='885'>
            <zone h='98230' id='39' param='vert' type-v2='layout-flow' w='89549' x='475' y='885'>
              <zone h='4867' id='40' type-v2='title' w='89549' x='475' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50000' id='75' name='Pokedex' w='89549' x='475' y='5752'>
                <layout-cache minheight='219' minwidth='168' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='384' h='43363' id='81' is-fixed='true' name='Pokemon Types' w='89549' x='475' y='55752'>
                <layout-cache fixed-size-w='1179' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='98230' id='76' is-fixed='true' param='vert' type-v2='layout-flow' w='9501' x='90024' y='885'>
              <zone h='9845' id='78' name='Pokedex' param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_334673789543669760:nk]' type-v2='filter' w='9501' x='90024' y='885'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='7633' id='79' name='Pokedex' param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Generation:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9501' x='90024' y='10730'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='69248' id='80' name='Pokedex' param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Name:nk]' type-v2='filter' w='9501' x='90024' y='18363'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5752' id='83' mode='checkdropdown' name='Pokemon Types' param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]' type-v2='filter' w='9501' x='90024' y='87611'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='5752' id='82' mode='checkdropdown' name='Pokemon Types' param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]' type-v2='filter' w='9501' x='90024' y='93363'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='11947' id='43' is-scaled='1' param='C:/Users/nicbr/Desktop/Pickachu.png' type-v2='bitmap' w='17613' x='67642' y='-664' />
        <zone h='11173' id='44' is-centered='0' is-scaled='1' param='C:/Users/nicbr/Desktop/Gengar.png' type-v2='bitmap' w='24517' x='11761' y='-332' />
        <zone forceUpdate='true' h='32965' id='45' type-v2='text' w='19477' x='70843' y='56305'>
          <formatted-text>
            <run fontsize='11'>The world of Pokemon is vast and ever evolving, the following two graphs help any up-and-coming or returning Pokemon Trainer obtain a more refined understanding of all the available Pokemon in the Pokemon World!!!</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='11' italic='true'>*The filters on the right allow a Pokemon Trainer to refine the data within the graphs by legendary or non-legendary, name, generation and # </run>
          </formatted-text>
        </zone>
        <zone h='19690' id='64' is-scaled='1' param='C:/Users/nicbr/Desktop/CharizardY.png' type-v2='bitmap' w='20187' x='74664' y='79978' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontcolor='#f28e2b' fontname='Wide Latin' fontsize='22' italic='true'>Welcome  to  the  world  of  Pokemon!!! </run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='92' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98230' id='91' param='vert' type-v2='layout-flow' w='99050' x='475' y='885'>
                <zone h='4867' id='40' type-v2='title' w='89549' x='475' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='95' h='11947' id='43' is-fixed='true' is-scaled='1' param='C:/Users/nicbr/Desktop/Pickachu.png' type-v2='bitmap' w='17613' x='67642' y='-664'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='90' h='11173' id='44' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/nicbr/Desktop/Gengar.png' type-v2='bitmap' w='24517' x='11761' y='-332'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9845' id='78' mode='checkdropdown' name='Pokedex' param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_334673789543669760:nk]' type-v2='filter' w='9501' x='90024' y='885'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7633' id='79' name='Pokedex' param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Generation:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='9501' x='90024' y='10730'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='69248' id='80' mode='checkdropdown' name='Pokedex' param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Name:nk]' type-v2='filter' w='9501' x='90024' y='18363'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50000' id='75' is-fixed='true' name='Pokedex' w='89549' x='475' y='5752'>
                  <layout-cache minheight='219' minwidth='168' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5752' id='83' mode='checkdropdown' name='Pokemon Types' param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]' type-v2='filter' w='9501' x='90024' y='87611'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5752' id='82' mode='checkdropdown' name='Pokemon Types' param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]' type-v2='filter' w='9501' x='90024' y='93363'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43363' id='81' is-fixed='true' name='Pokemon Types' w='89549' x='475' y='55752'>
                  <layout-cache fixed-size-w='1179' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone forceUpdate='true' h='32965' id='45' type-v2='text' w='19477' x='70843' y='56305'>
                  <formatted-text>
                    <run fontsize='11'>The world of Pokemon is vast and ever evolving, the following two graphs help any up-and-coming or returning Pokemon Trainer obtain a more refined understanding of all the available Pokemon in the Pokemon World!!!</run>
                    <run>Æ&#10;&#10;</run>
                    <run fontsize='11' italic='true'>*The filters on the right allow a Pokemon Trainer to refine the data within the graphs by legendary or non-legendary, name, generation and # </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='157' h='19690' id='64' is-fixed='true' is-scaled='1' param='C:/Users/nicbr/Desktop/CharizardY.png' type-v2='bitmap' w='20187' x='74664' y='79978'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2ACFB97E-42D3-4D86-9DEE-CD7BEBC525F0}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Pokedex'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_334673789543669760:nk]' type='filter' />
            <card param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Generation:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Name:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[:Measure Names]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:#:qk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_334673789543669760:nk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Generation:qk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Legendary:nk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Name:nk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Type 1:nk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Type 2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0189155-77E1-416D-BC39-C438D3623C85}' />
    </window>
    <window class='worksheet' name='Pokemon Types'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]' type='filter' />
            <card mode='checkdropdown' param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]' type='filter' />
            <card param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_334673789543669760:nk]' type='filter' />
            <card param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Generation:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_334673789543669760:nk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_707909609218011136:nk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242483998720:nk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_903253242484363265:nk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Generation:qk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Name:nk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Type 1:nk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Type 2:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{79F0F647-DA20-448A-BA59-4FBF92846B25}' />
    </window>
    <window class='worksheet' name='Pokemon List'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Generation:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[attr:Generation:qk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Calculation_334673789543669760:nk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Generation:qk]</field>
            <field>[federated.1topkd20ssvxfz12vrf3c0w2o0l7].[none:Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5CFCDAD2-8729-4B2E-961E-ADB9C6263943}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard'>
      <viewpoints>
        <viewpoint name='Pokedex'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Pokemon Types' />
      </viewpoints>
      <active id='81' />
      <simple-id uuid='{63F3EAD1-C6EF-4949-A8B3-5194B9FA3F21}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard' width='192'>
      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
      VJKlVBLswxcz2hj1egrOnqXuyhWUyuEkgN8Yt9vN+1/5CgczMtj3q1/1O7b3jTdY3NBAnkrF
      ieef97rMxMWLKXrqKRoefZTgmBivdcmPPEJkfDydt93G3LlzbywYAxLz88nau5f0P/2J2C1b
      +h27Nvxbv2zZgOHfdRs2gCD4Nx9gKCxGPQ0dFjISQr3eIyzo0UfZHRpKfEmJr+ZGjfATJ/gn
      g4G9LhdJ//zPI2qrqKgIRVcXZevW4dmzp19w0KJUMueTKZFF77/vdZm62loytmzBVFeHyWj0
      Wqd4/nnyHQ4s3d3otm71OdA3GqxYsYKTJ09itVq54447+h1rM5k+XQ4mqKyM2Yv/vpSnvqYG
      vvtdpNhYDAsXkjrI2833TfI8Hi4Wl9KR4F0ukMfjoWPKFPKzsni9rGzc5gJFLV7M7hkzSDAY
      aGpqYurn2pmB9DE7O5uOJ57gzpwcCgoK+h0Pj4mhsrISs8VCWFSU1zYtSUnU/va3dCqVxP/D
      P3ita3zgAUJnzaJLpyNEryczM3NY1zZSuuXLlyOKIgqFop8279Zbh8yBKt29G8XSpQh6Pad3
      7+a+QR5sPleA3l4bLrsDRJdX6wIplUqufPghGWFhtFRUDNqODmRI3WazceLNNwmKixu05z+U
      LV1cHLctXkx5eTlT1AOvI5A+RkdHs2bNGqqqqvjSl77U73hvUxN1Fy4QkZ2NvqwM1ZNPemUn
      tqqKGQoFma2tNPf0eO3rqT17SDGZOHj2LLN/+csJt57QtRyowUjfsoWEhAS6urqIiooa1KbP
      XiSlZ/JPD2f6pJl/8SLOhQtZ3NLiqzmfOfT008zYuROX1cpxYO3WrV7pVq1ejdPpJCgoiKVL
      l46sk0BERASLFw9ceTt+5kzicnPp6uoiMiPD6/JCNm0i8/bbcTgctJw+7bXuAZOJnB07SOvu
      Jjw83GvdcPKjRov169dTWlrKtGnTfFsYK9B03H8/+lOn6Fy/fsRtVSUkoHnxRZxOJ43Nzaz1
      UnfvvfeOqF/eEqXVYn/gAeYIAmVePv0BOtrbOXPmDB0dHYSGhHit63nkEdoyM+nS6UgSvV8D
      ZPvDDzPv8GEOJiRw64kT47YSzJw5079dIgOFUqkk8YMPCFu4kLZRWOdGcfEiOqMRe1UVEYOs
      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
      k+Fkxjf/H8/BSIXYQ0A7AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pokedex' width='192'>
      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
      J/YRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Pokemon List' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Pokemon Types' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd3xUZb748c+0zKT3XoAkJPQA0gy9I11FWREVu+u6q7vret1797eX3b3X
      ddeyFkABAZUm0jGhE0gASSEQ0kMgCek9mUlmkum/P9R9XcQJApnMTHLefxlizvd7Zs5zyvM8
      3+eIzGazGYGgjxLbOgGBwJaEBiDo06S2TqArRpMZjU5v6zQEvZidNwATDe0dtk5D0IsJt0CC
      Pk1oAII+TWgAgj5NaACCPk1oAII+TWgAgj5NaACCPk1oAII+TWgAgj5NaACCPk2yevXq1bZO
      whKjyYyqU3fXf1+ansjn2w6SnZWNz4CheLvKujG779Rkn2D953u5XlKJf78o3BW3xlDduEji
      hUoGDQxFdJvtmY169q7/O8lpuSgNciJCAxCLbvdXd6fx2gU2bNhGTm4eMndv0lPTiIoZ+JNn
      xebaasTO7ki//6VJq6a2uQ13V5d7zuPU9vc5fCadZp2c6H7B//731voqjFJXnKQ/8zytrmP9
      mo/JzMxCGhCJSN2Os4fbv/envSaHb04XMyQ2AjBSX1PfuxtAccpumgLnMFKSQUq1L4EKHQon
      qKhVoTC3kZOdT7tGj4e3F5K7PMaqMg5SIL+f2f1b2HKokLgoN/JyCsHFC21zJXUNLTSVZXL0
      oorBwTJErj7IpZaDmU0G9ny2hQd/9x+cWfc2bjEjaGlsoE2lQq+sI7/wOgpPf0QdjeTk5KPu
      MODqIqXwymVUBifkhhaKr5dRVduEr78vErHlWPX5p0lvCee1l1fiYWpkb8IZ7r9/FEVZl2kz
      KfCUmynMzqK1XcNHr7+AOmA4XhINjY0NaFWNnMuuJCbck7ysLHRSdzzdFHf1GSZ88gmTX/0T
      kwaH01h+jbyCa8jcfSlNP0ynWxjN1VW0tzRT06TE211KaWk9Pj6et26ovZovDl3g1f/4L0Ld
      dKScPEd4VCjFV67Q2KTEqLnBzv0XCQlwQ4yS15/9jX1PhusOl45/TZ1LOzNXurB1w2ZWPjmL
      zYeqiVCnEBC/kPNb9/DGu//ET35vcQIiY9HsP0JFiRtJ3xymxDSYuX6FHMgV8dDcQdTkXeQz
      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
    </thumbnail>
  </thumbnails>
  <external>
    <shapes>
      <shape name=':custom/183-1830162_pokeball-pixel-art-clipart-png-download-pokeball-pixel.png' />
      <shape name=':custom/2-25193_pokemon-ball-transparent-background-transparent-background-pokeball-png.png'>
        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
        fL3C6KCIzBgRvzi8Hg9lp06x7a232LXzPVqamwfUT1qtUmMym8jKyiI7J4fCwgIyMjIwWyxo
        JnCJAVEU8fl8dNtsNDc10djYSGtrK06Hs0/5jY8iJTWV1WvWcPmVV7B6zZqor+VD/akUzh+K
        yIwT4gF+J0tL2bH9Hfbt3UtjQ8NZ5RzP9V5BENBqtSQmJZKWmkZOTg45uTnRPtwWCwkGw1mN
        4OD83NHjbXB7I4oioWAIn9+HrdtGl7WL9vZ2Wltasdls+P1+WWw/boxqtZqMzExWrFrJZRs3
        snrNGlKVWKRxgyIy4xBJkvD7fFRXV7N/3z4+2LePytMV2O32fp3G5/oMiBax1mg0JCUlYbFY
        SE1NJSUlBUuihURLImaLGZVKjcVsRqVWyb27++PDnSr7+05JkqJdKSUp2lPb6yUQDNJjs+P3
        ++myWnG7XFi7rbhdbnw+38cuez6MSqXCZDIxo6CAlatXse6ii1m4eBHJycmKtTIOUURmnBPf
        oerq7KSsrIzDBw5y4vhxGuqjuyj9+XI+6rN6E29zq1KpZIeyRqMhJSUlKjgIfdpPpiQnYzAk
        IErRZMI+VpYUtU78AT9OhxMJiUgogs/vQxQlRDHS5/sHIwZxUcnOzWHBgoWsXL2KJUuWkpuX
        i2EK+KQmOorITDDiMTjWLitVVZWcKi2l7FQZdbW1WLu68Pl8A7Z2Puo7hsNwLnqVSoVOpyM5
        JZn8/BnMnT+PhYsWMWfuXHJyczEZjagmsM9pKqKIzAQnbum43W462tupq62lqqqK2uoaGhsb
        sXZ24XI5CQaDwxafkUSlUqHVajGZTKSmpZGbl0tBYRGzZs+iqKiY3LxckpKT0el0im9lgqOI
        zCQjboVEIhECgQAup5Ouzk7a2ztoaW6itbWNjvY2urq6sNvseDxuvF4f4VCIcDgs+1OGg1qj
        QaNWo9ZoSDAYMJnNJCYlkp6WzrTsrJhTOpfsnBwyp00jOSmZBGOCXOxLWf5MLhSRmSL0Fg5R
        FAmFQlHHrMeD1+vF4/HgdDrxuN143NFjPp8Pn89LJCISCAQI99pCFlQqjAkJCCqBhAQjer0e
        o8mIyWTCbLZgsVgwW8wYjdFjOr0ejUbTp2qgIiZTA0VkFBQURhVlsaugoDCqKCKjoKAwqigi
        o6CgMKooIqOgoDCqKCKjoKAwqigio6CgMKooIqOgoDCqKCKjoKAwqigio6CgMKooIqOgoDCq
        KCKjoKAwqigio6CgMKooIqOgoDCqKCKjoKAwqigio6CgMKooIqOgoDCqKCKjoKAwqigio6Cg
        MKooIqOgoDCqKCKjoKAwqigio6CgMKooIqOgoDCqKCKjoKAwqigio6CgMKooIqOgoDCq/H+f
        8FuJ90taxAAAAABJRU5ErkJggg==
      </shape>
      <shape name=':custom/249-2496101_pokeball-png-poké-ball.png' />
      <shape name=':custom/Poké_Ball_icon.svg.png'>
        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
        QMCR/w+uItHDP30/kgAAAABJRU5ErkJggg==
      </shape>
      <shape name=':custom/pokeball-png-45330.png'>
        iVBORw0KGgoAAAANSUhEUgAAASsAAAEsCAYAAACboZUMAAAACXBIWXMAAA3XAAAN1wFCKJt4
        AAAAGXRFWHRTb2Z0d2FyZQB3d3cuaW5rc2NhcGUub3Jnm+48GgAAIABJREFUeJzsvXl8VfWd
        ///8nHPukpubjZCNLSxhCYRNQFBRcN8XqlZsq611uqB22v5mOp2ZXzu/b2c63/m20+kyrbYd
        7Ux1qtZvtUVGqigqiogsKiD7HgJJIAtZ7s3dz/n98bkXEAMkuZ+7Jef5eJxHAiTv8yG553Xf
        n/fnvQhsbD6JDhQAlcAIoCr+MfF5RfzfdUCc8X0C0OIXgNXLZQI9QAvQCByLfzzz6gRiqfrP
        2eQm4sJfYjPIEIAbGAtMA8YhBSghSCORIuUhc6+PHuA4UsjOFrN6YB/QhhQ+K0NrtEkztlgN
        XhK/WzcwBpgDzI1/rAOGZWhdKogAh4HN8WsTsAPo4LR42SI2yLDFanAg4pcLGA1chBSmeeS+
        MPWVANLj2hS/NgN7AT+2gA0KbLHKTRLiVApcDFyOFKc6oBz795qgG9gJbEQK2HvAEaRnZmZw
        XTYDwH5R5w4aMqA9ErgGuA24jKHhNakiCmwHVgIrkELWw+ngv00WY4tV9pI4WXMCE4AbkQI1
        FxmHskkOE7ltXAW8CHyA9MTsoH2WYotVdiGQ3pMHmA7cAtyEPLXTM7iuoUAD8DqwHHgXOIkU
        Lnu7mCXYYpV5Eh5UMTAfuAO5zRuL/fvJFK3AW0iP601kGkUMW7hshiga8vSuFvg+sJ/ekyjt
        K7NXF/An4FZkfND2cG2GDDrSi7oW+L+Aj8w/kPZ14csEPgS+CVQDDmzP12YQIpAv7tHAI8gc
        oEQg175y7zoO/BKZx5aP7W3ZDAJ05It5DvAL5Is80w+afam7QsDLwF1AGWBge1spw/7Bqkcg
        X7TFwBXAg8DVyBQEm8HLDuBp4A/Ik0U78dQmqzGQ8YxvIV+8mX7nt6/0X23Ab4BLAS+nO1DY
        2GQFBrJjwcPIRMNMPzD2lfmrB/hvZBJvHvYuxibD6MhYxb3IoHmmHxD7yr6rHfgxMAWZqmKL
        lk1aSSRx3ojMerZP9uzrQtcR4G85nfZg009sle8fGrIUZgbwDeBTDMFjayGSe9lYlqVoJTnJ
        duAnwJ+RmfLRzC4nd7DFqm8IZNxhIvAQcF/8z4OKM0UoUaSoaxoOXUfXdQxNkx91HU3TTvWp
        SVxwuvJaQz6FUU67FgCmZRGNxYjGYkTO/GhZmJZ12hUZ3IJmAWuR28O12G2c+4QtVhfGiXTd
        vwh8CdlDKqdJiJImBA5dx+104tB1nLqOQ9Nw6jrDNI1xmsYYTaMMmSyWj1RoT/zKP+PzxJWH
        PG1IYALhM64g8slsAU4Axy2LRsuiybJojsU4EYvRaZqETFOKmmkSicUIR6NETFPutwePkMWA
        /0F6WluQ1Qx2usM5sMXq3GjIwQifQqYiVGd2OQMjIUy6ELh0nTyHA7fTSZ7DQYlhMFrXqUb+
        58bGP45GBuTSfeZuWhZhy+JkXMCOI/dJzcBBYE8sRkM0SnckQigSITR4BKwHeAaZOLwHqek2
        Z2GL1SdJDFSYAfwdsodUzvychBAyK1XX8TideBwOvE4nYwyDObrOTKAG2ZS9lI97QdmEaVlE
        LItA/Iog906dwCFk1fdeyzolYL5IhGAkIj0wy8pVAWsE/jfwR2S1g+1lnUHOPIRpQke2Bb4b
        +AdyZMsn4ts5r8uF1+2mwOlklK6fasQ+G+ktZaswXQgrLlZBy6LHNAnz8ac4IWD7gH2myc5Y
        jIZIhK5QiJ5IhIhl5ZJwmcguD/+CTCy2vaw4tlhJzvSm/h7ZDiRrfzYJ78ltGBS63RS73VQ7
        HMzRNOYBs5DiNBiPKS3LImRZ+CyLoGUR43TwPkEMmSewGVgXi7ErEqEtFMIfDhM2TczcEK4j
        wD8hY1ot2F5W9j6QaSThTd0J/H/A8Mwup3eEEGhC4HY4KHK7qXS7mWMYXCME84FRDE5xOh9h
        08RvWfRY1qlTx944DmwF1psmH4TDNMWFKxQXriyWrhjwe+Bfgd3Iwukhy1AWq4Q3VYdM1ltC
        lv08hBBomkaew0FxXh5lLhczDIPrkRXSIzO9wCwhGhcsv2lesHq4G7m3Wm+abIxGaQiF6AyF
        CMRixLLX4zoAfA94hdPDXYccWfVwppGEN7UEGZuqyOxyPo4mBE7DoMTjocztZprDwbXAYuxe
        x+fDjAfjffGt4oWe6BAyUP+uZfFWNMr+YJDOYJCQaWZjjCsKPIlMc9iHzAQZUgzF133Cm/ob
        ZB+irPkZGJqG1+mkwuOh1u3mOk3jKuTp3VDb4iWDFY9nJeJafRlX040cLvjnWIytoRDHAwEC
        0Wg2elu7gP+FLPNKDLUYEmTNg5oGBDJ96GbgB8guCRkncZJX7HYz3uPhOqeTJchxNnYBWfKE
        TJPuuMfVlxTxGDLR6VXL4u1wmPpAAF84TMQ0sym2FQYeB/4dmYI2JEp2hopYaUAV8HlkED3j
        jfA0TcNlGJR6PNS43dxqGCwBxmV6YYMQKy5WXfHtYV9FpwVZC/NKJMKuYJD2YJBgdp0mrkPm
        Am5iCKQ4DAWxMpA7qW8hS2Yyih5P1izPz2eKy8USIbgJqaQ2qSVmWfhME98FTg/PJoQ8Tfxz
        LMbGUIijgQA92bNFPIgMabyG3M1mxaJSwWAXKxcyL/JfgUsyuRBd0/C6XFR5vUx3ubgLOd6m
        JJOLGqKETJOuM/K0+sNh4CXLYnUoxKGeHvzRKDEz42GjDuC7yJbKJxikgjVY47YCKACuB/4L
        mJqpheiaRoHTyYTiYq4qKOCvDINvIBM3B13bhhzBEII8IXAIgUn/2h0UAxcLwRzDwOF24zcM
        AqZJNLMxLTfyvU9DHnB2MQgFazCKleB0985fIQdTph1NCDxOJxOLiri1sJC/dTh4SAgmYwfO
        swEhBE4hcAuBBr1mwp+PUuASIZhhGOBy4dd1gqZJNHNbQx24DBlR2M0gPCkcbGKlIxsHfA05
        5TjtgXQhBG6nk9GFhVxTVMTfOZ18VQjGMfh+2IMBTQjcmoYLTnlZfZUbgUzQWygEtQ4HUZcL
        vxAETTOT8axpyHLQPcgt4aA5KRxMz48D+Yv6Z2TfqbTG44QQOB0Oyr1eLi4q4hGXi78Wglrs
        8Sa5QGJrmGga2B+XRENWE1yhaUxwOgk6nfiRsbEMidYoZA5xPXCMQZJAOljEKg9YiNz2LU73
        zQ3DYFh+PnVFRSzNy+O7msYiZHTfJncQQuDSNAxkCU9/g+8GssJgsaYxyuXC53Dgs6xMFU8X
        AzcgB1bUI3tm5XQcazCIlRe4CRlIH5/OGwsh8LrdTCgq4ob8fP5O07gX+SqxyV0cQuBEelcD
        2UM5gEnA5bqO2+WiwzDojrduTjMuTgfe95LjgfdcF6sCZDuXJ0hzFoDTMKjyermsqIhvOBx8
        DRksG+y5IEMFQwhc8S6r/cnJOpM8YI4QTDAMfC4XnZaViaRSDTlwtQT4CJnmkJOClctiVYDs
        4vkfSO8qLWhCUOB2M6uoiC/l5/P3QjCX3G1sZ3NutLhgDSSOlUAg41kLNE16WbqeKS9rFlBE
        DgtWropVIXA70qPypOumDsOgMj+f64uL+a7DwV3IoQk2g5ez41gDzQXIQx7RTTQM/C4XHZZF
        MBZLt5c1C/nsfIRssJpTgpWLYlUI3IH0qNzpuKEQgnyXi6lFRdzn9fL38Xwpm6GDQ4gBpTec
        iUBWzy/QNDxOJyd1ne54QmkamYXciWwnxwQr18SqENmDKm1C5TAMSvPzWVhczDcdDh5E7j9t
        hh56PInUYuBxLJAv3NlCMMnhwO90ctKyTnUtTROzkTuSnBKsXBKrIqRQ/Yo0CJUQAo/Lxfii
        Im73evmOEFyGnTM11EnEsRInhck85VXApZqG4XJxQtPojsXSWWd4ETkmWLkiVkXI+X1pESpd
        0yjyeJhTXMxfOJ18E7srgs1pEqU6JpwaETZQXEgvq8ThoM3p5GQsRiR9gjUnvoQd5EBaQy6I
        VRFymMMvSUOepcMwqMrP59qiIr6taSwhC5pf2WQdWlywLJIXLA2ZlzVO0+hwuWizLMKxWLpa
        K89FvsS3k+WCle1iVYRsPfwYaRAqt8PBpMJC7o8H0aek+oY2OY12hoeV7JYQpPc+Qwj8Tict
        QCB9p4XzkIKV1R5WNouVF7n1S7lHlTjtm1VczDK3m4eRkXwbmwuhMoYF8nU3RwiE00mrrtOV
        vjjWPKQebCdLm/hlq1glygT+kxS3fdKEoNDtZkFxMd9wOLgXO8HTpn+oFiwX8riu0DBoMQwZ
        x4r1t1JxQFyMzM7YBvjTccP+kI1iZQALgKdIcS8qXdcZ5vFwVXEx39Z1rsMul7EZGAnBiqFG
        sDRgMjBO12l3OGiNxQinvsGfAOYDzcgpOlnV1z3bxEpDdvV8HNk3PWU4DIPKggJuKijgO5rG
        nFTezGZIkIhhxZBBdxWMAKZrGj0uF82WRSD1gfdELeF24BBZ1A8rm8RKAGOQ/aiuSuWNXE4n
        1YWFfCpe25fWVg02gxot3i45irqnvAi4SAh6nE6agJ7UB95dyBjWBqCRLOk4mk1iVQp8BXgo
        lTfJczqZVFTEZ9xu/gbZ/9jGRiW6EOhAZAA9sc6FG3lS2ON0clzX5XSd1Abei5EZFeuRI+sz
        HnDPFrHKR578/RspDBt5nE5mFBXxoMvFI9hFyDapw4i3l4kkUfx8Ni5gBhAwDI5rGr7UC9YY
        5AHlZmRKQ0bJBrFyAtcAvyWF+Zcep5O5RUV8w+XifuyhDTapJ9HAL9mk0bNtTgeChkFTegRr
        OuBDdmroSeWNLkSmxUpH7o3/mxSe/HmcTuYVF/Mtl4sl2Cd+NukhUZajMn4F8o12BhCJC1Z3
        agVLIE/nDwD7yGA/90yKVeJ09lFSONfP43Qyp7iYrzud3J6qm9jYnANNCBzI7aBKwTKQghVN
        j2AZyCHBHwBH6N+oRWVkSqwSrX2+g2xLnBI8Tieziov5mtPJ3am6iY3NBdCFQKA2fgXy4Z0O
        mHHB6kqtYOUj9XE9GZr6nCmxKgD+AvjrVN0gz+lkZnExDzmd3Iu99bPJLA5QUvR8NgnBEobB
        MSFSXZ5TgRzztR7ZGjmtZEKsHMDVyHYvKbl/nstFXXExX3U6uQ+7B5VN5jkzfqUqYTSBhhyY
        qTscHIkLlpk6wZqIPDfYBARSdZPeSLdYJeJU/43Mq1JOntPJtHgfqgfI/AmCjU0CIQSGEMrj
        VyAfrFqgx+GgQQj8qRWsi4CtyIB72uJX6X6WS4DvIj0r5bgcDqYUF/OAy8WXsQuSbbIPPdED
        S3H8Ck4LVpvDwVGgJxpNVWmOjjwUe500JoymU6ycwI3IchrlISSHrlNTUMAX8/JYhp1HZZO9
        OJDn/6kounMity6NDgdNlkUwdYJVhvQH1pOm/Kt0iVWiQPn3pGDGn65pjPR6+WJBAX+J3dnT
        JrsR8VmEYYXlOGeSjxxN3uBw0ByLEU5de5mZyO3gXtKwHUyXWA0D/jcyuUwpQgiGeTzcWVTE
        t4WwS2hscoJEsXPEslKyhyoBKoWg3uGgJRJJVT8sHRnbX00atoPpECsncnLyP5CC7V+h283V
        JSV8R9PsoQ42OYWB9K5S1YOlCijQNOodDtojkVSlNJQhn/F3SfF2MNVipSHTQJ4lBZOT8+Jl
        NH9rGMxSbdzGJsXo8WLncAqC7QnGAZamUa9pdEajqTohnIGsHdxDCreDqRar4cAPQX1vO5fD
        wZSiIh5yuVKXAm9jk2IMZN6V6tyrBAIZcPcZBvWALzUBdx2oQ54OtpKi7WAqxcqFHKH1bRRv
        /wxdZ3RBAZ/zePgqdtKnTe4i4r2vQikKtoN8yGuBVsPgiGnKE0L1txmObLu1jhRtB1MlVhow
        C3gGxUNJNU2jND+f2wsK+BvsnlQ2uY8Rb4UcTlGwHWRQaYIQ7Hc4aIrFCEdTEimbjhzntZsU
        bAdTJVbFwE+Re1mlFLjdXFVczHeEYKRq4zY2GUIntcF2kF30CuOC1R6NElN/Qqght4MpOR1M
        hVgZwPXITHWl2z+3w8G8khL+Rte5SKVhG5sMoycGTaTQuwIYDXRoGod1HX84nIpe7qVIDXgL
        CKk0nAqxGoFM/ixRadTQNGoKC3nE7bb7UtkMSnQgmMLYFUjvoQbYr+sywz2SktB+ohTnKAq9
        K9WxaSeyl/o4lUaFEJS43dyRn8+9Kg3b2GQRDiHI07SUHxgVA58DJns8uB0pKUzLA76BHMyj
        DJWelUCK1NMonqLscTq5vLiY72paaqee2thkmFSfDCaoBCJCcEDX6YpEUpF/NRGZKHoQRaO8
        VIq4C3gQ1ds/XWe818sXDYNqlYZtbLKQdHlXALcDlzmdFLvdCKG8uEQHvonCVlCqPCuBTOV4
        AoUND4QQlOblcU9hIV/F7k1lMzTQSI935UDO2tpjGDRHIkTVnw6ORWa270KBd6Xq+fcA/4Li
        THWP08llJSV8V9MYrtKwjU0Wo6e4yPlMSgCXEOzVdTrUbwcFUrD+BwVzB1WIlYbsHPhviuwB
        cvtXU1TEN5xOFqoyamOTI6TjZDDBWKBZ1zlomgTUnw5WAQ3IyThJ/XdUbI3zgX9E8favJC+P
        6/PyuE2VURubHMIpBO5436tUYwB3A5M8HlypOR18BJnilVRgLNmfhY6cJ6a0TbHb4WBOYSFf
        QUbtbWyGIvnxusF0MBa4UdOo9HoxdOV3nQB8gST7YiYrVoXA/1Fg5xS6pjG2oID7NY1Jqoza
        2OQgzviA1HSNkbsZmOp04s3LS8Xp4JeR6QwDNpyMyOjANaC2lVSBy8W1eXksUWnUxiYHEWlM
        YwCZLLoEGOHx4DCUj1spB5aRRA5mMj+HhFelTIIdus4Ur5cvobhVg41NjpInRFqnNF0BzNY0
        ivPzU+Fd3YcsxRmQ7gxUrHTgSmRfemUUu1zc4nJRp9KojU0OY8SHo6ZrK+hEBttHu1w41Qfb
        C4CHGGDsaqBi5QK+P8Dv7RWnYTC1oMCu/bOxOQtPGgPtIPs6XSEEpR4PmqZ8E/opBngyOJCV
        CGSTrckD+N7eDcYz1Zc4HGpdNRubQYArHmhPFwKpKDUuVyoKnYuQzlu/d7cDESsnclKNMsl1
        6jrTvV7uVmXQxmYQoaUx5yrBKOAWISjPz0dX7119DhnP7xcDWcUIFOZVCSEo83i4W9cZocqo
        jc0gIy/NW0GAG4BpTid5LuXZjrXA5fSz4qW/YmUgk7uUrd5tGMz2eu1UBRub8+BIc6AdZDT8
        VqDc40FXnyj6IP089O+vWHmR0XwlaEJQ6fXyGU1T10fCxmYQIoQgL81bQYBLgfEOB/nq28hc
        g4x799lof/7vGjJdQVkDhDyHg7keDzerMmhjM4hxZUCsCoDrgFL13pUTuUvrc6C9PxF5B/C9
        fi7onGhCUJWfz31CUKDKqE3KiVkWYcsiAkTj01hiZ3wejXcKiCHfMp3IeEuBpuERAkN9ouGQ
        wUA+hKkaiHourgRW6Dptbjfdfr/KIal3I4cgH+3LF/dVrAQy83TaABf1CVy6zoK8PK5RZdBG
        OZZlEQZOmiatpklrLMZJ06TdNPFZFsH4FTjj86BlEUCOldIBr6ZRrmmM0HWqdJ0STcMrhLw0
        jYL45y4h0GwhOy8i/nMKpnDcfG8MBxYDDXl5+AMBlSO8KoHbgF/Th/YxfRUrAzlZWYkXKoRg
        eF4en9E0tc3abZImbFl0mCYtpklLLMbRWIzd0SgfRSLsikQ4GosRGKBtAximaYzQNEbqOiN1
        nRG6zqj4x6r435Vomu2BnQOXEGhpFiuAa4FXdZ1Wlwt/j9KBy59Hzm3ovNAX9lWsypAHA0pw
        aBrT8vPtpnpZgGVZ+C2LpliMJtPkWDTKnrg4bY9EqI/FlA1/iwInTJMTpsmWMyYCa0CFpjHT
        4eBSp5PZTicTDIORuk6BEKmoUctZnPEUhlQOQ+2NMcAC4GheHoFgUGVH0bnx6w0uMLarL2Kl
        A0uRrYuVUOh0cqth2LGqDGLGPah90ShbIhHWh8NsCoc5FI0O2HMa8FqAJtOkKRRiVSjEKE3j
        EpeLy51O6hwOxhoGlbqO2xYttPhWMJIB7+pG4G2HgzbDIBQOqzKrAX8BrAXOa7Qvv30nsB9Z
        z5M0uqYxq7SU510uxqowaNMvYpZFu2myJxrl3VCIl4JBNofDaReovuAEJhkGl7tcLHA6meJw
        ME7XGaZp6ENYuHriccN0e1cmsiXwy8EgLZ2dKgPt3cix80fO90V9OYucCPwtilrBeB0OPlVU
        xD0qjNn0mZhl0WKabA6H+VMwyC98Pp4NBDgYi6X9Rd9XYsht4+ZIhDdCIbZFInTEhygUxEtQ
        huIWUQA9aerPfvZ9vcBGTaMjFFK5FXQB2+LXORXwQmKlA3+PbF2cNEIIRhcW8rdOJ2NUGLS5
        IFHLojkWY2M4zPOBAI/6/fwhEOCIaab9xZ4MIeBILMbaUIitkQhhy6IgfproHGKCpQlBKJ4+
        km7KgC1C0GiahNQOlxDAHzjPyK4LiZUD+A9ko72kcRsGC4uL+VqaG4oNRSzL4qRp8l44zLM9
        PTzq9/PHYJBG00x7rEMlifjWe+EwR2IxDKBI08gfYqkPMcsixAUi0ikgIRibdZ3uYFDlVrAS
        OXf0nEeNFxKrEcB3UJCyIISgLD+fr+XlqR0uaPMJIpbFoWiU5wMBfuLz8UIwSLNppv2FnUrC
        wJ5olPcjETpMkzwhKNY03DBktoY9GQiyg5w1+Kam0R6NEokqCyK4kUH2fef6gvOJlYZs8n69
        ipUYus704mL+TtPwqjBo0yt+0+SDSIRf+3z82u9nXyw2qETqbDoti82RCLujUWKWRUE8W94x
        yAUrU3ErkGkBe4F6TcMfDKo0HQRe4hwO4/nEygAeR1EtYKHLxb1er7pkLZuPYVkWrabJqlCI
        f/f5+GMwSHemF5UmTOBoLMaGcJjGuJc1XNPIG8QBeC2eyZ6pwxEdeFfT6FYbaC9HbgV7Te07
        n1iVAP98ga/pE5oQjCks5DsOB1XJGrP5BBHL4mA0yrM9Pfzc52N9JJJTwXNVBIHt0Si7olF0
        GPRJpdEMxa0AhgFrhKBDCJU5V4XASuQE509wLiFKdDa9S8UKHJrG4uJiHspA1fhgx2eavB+J
        8Gu/nyf8furVvcvlLMdNk+3xk6pqw6BwkAbfLUh7nWACJ1JR9msavkBAZaC9HVhNLxp8LrEy
        kKeAI1XcvdDp5MteL/NUGLM5RXssxquhED/z+fhjIIAv0wvKIrosi13xOFa1YVCsaYNOsATg
        z5BYgUyOekvT6AqFVBY3DwN+Qy8VRedydFygZiKWEIJheXl2HaBiWmMx/hQM8i/d3awKhTKS
        c5PtnDBNHvf7edTnY1ckQkTdu39WoDOAqQsKmYr0ZvJcLpVb7UnIcfOfoDexEsj+yEoaIhhC
        MCkvj4kqjNkAsmXL/wSD/LS7mw/VJuYNOk5aFv/V08O/+3xsi0QIDSLBEvGE2EyFVlzAZcgp
        6grRgFvoRZt6+39qwP+j6s55us4iXU/rKKHBTJdp8mowyGM+H9vV5bgManyWxdM9Pfyku5v3
        w2ECg0iw0t2X/WwWAgWGobqL6O30EqLqzYvUkN0gkkYIQVFeHotUGLPBb5q8FQrxqM/H5gx7
        VLqu43a7cblcOByOj11OpxNN0wgGg3R2dtLV1UVQbbZzvwkAfwgECFoWXy8oYJ7TOSi6ODgy
        LFYTgGrgmMtFl7o3z9nIhPT6M/+yN7GaCGryNjVgbF4e01UYG+IETJP14TCP+nysVXdU3Gd0
        Xae4uJjKykoqKyupqqqivLwcr9dLXl4ebrebvLy8U58bhkF3dzdNTU00NzfT0tJCR0cHnZ2d
        dHR00NLSQnt7O9E0eodhYHkwiAC+VVDAbKcz55NHDRQO8Bzg/ecB29xuunt6VL0huZChqCOc
        cSp4tlgJ4H4UdVhw6TqXOhzkqzA2hAlZFu9HIjzq8/FaSFUrvAuTn5/PqFGjGDVqFCNGjGDC
        hAlMnjyZKVOmMH78eAoL+1YyalkWfr+f48eP09TURGNjI/v27WP79u3s2bOHw4cP09HRkRbP
        KwasCAYp1TT+StOoMYyczsPS4n3twxn0WmcAeYaBpmkqTwUXA89wAbG6UdXdClwuFqsyNkSJ
        WBbbIxEe8/lYGQym5Zi6qKiISZMmMW/ePBYsWEBdXR3jx4+nqKhoQPaEEHi9XrxeLxMmyIMe
        y7Jobm5m8+bNvPfee2zbto19+/bR0NBAj9q2uZ8gDLwQCDDeMHggP58y9TPx0oqBfHAzJVcT
        QfbRdzrpCSjrjHYpZzlNZ7+l6MikrKS7LGhCMKusjFVOp7rZXUMM07LYF43yk+5unuzpQWkV
        1lkIISgpKaG2tpb58+dz3XXXcfHFF1NSUpLCu0oikQiHDh1iw4YNbNiwgY0bN7Jr1y58vtRm
        jtUZBt8tLORmt5t89SPS00a3adKR4ZY/3wTeCYVoU+chB4EKoCvxF2e/pRQA/4CCbaBL17mx
        uNhuspcEJ0yTp/1+Hu/pSWnCZ2lpKRdffDFLlizhy1/+Mvfeey9Tp04lLy894zx0Xae0tJSZ
        M2dy+eWXU1NTg67rdHZ20t3drbL27GOcME16TJPJDgeVup6z3UfN+IShTNYuNAPbNQ2fuoMU
        A/gT0Jj4i7PFaiFy2kTSFLpcPOTx2MH1ARKyLN4Mhfipz0dDih5WwzCYOHEi99xzD4888gh3
        3303EydOxKU2b6ZfuFwuampqmD17NmVlZUSjUU6ePElA3fbiYxyJxXAIwVTDoETTcjZ+lal2
        MQks4A0h8EciKg9NtgCbE384U6wEctxW0u2mBFDu8fAPLhfFyRobgliWxYFolMd9Plan6OTP
        6/Uyf/58vvrVr/Lggw8yefJkHI7syYYrKipi5syZ1NbW4vF48Pl8dHZ2Kj89jAH1sRjDdZ1J
        hoEnB7eDGrLsJpPbQC/wZ+SWNKTuEKgD6V0BHxcrDfgBsnNpUuhCMLWoiK/rul24PAC6LIsX
        AwEe9/vP3TYxCSoqKrjlllv42te+xq233trnU73Ie7OhAAAgAElEQVR0o+s6I0eOZM6cOYwe
        PZquri6OHz+u8mEA5IN+3DQZp+uM1fWcS2cQQhDIYLsYkLkGm4FjQI+6Hlce4BfEzw7OPg1U
        MsHGEIKZDkfyvWWGIFHLYlskwnOBAK2Kj6MT274777yTe++9l9ra2pzY9pSUlLBkyRIqKysp
        LCzklVdeob29Xek9tkYiPNvTw0TDYJrDkRM/lzNxICPSmczNnwls1HWEEKriVmOQh30d8HGx
        KkTRbECHplGXY7/sbOF4LMbKQID3FG//HA4Hs2fP5itf+Qq33XYbw4fn1hmtpmlceumluN1u
        PB4PL774Ii0tLUrv8VooxKJQiNGGQVGOvX4NIRAZLiOaATg1DU3TVB2KOIFaYD18fBt4DfBZ
        FXcodDp5xOOhWoWxIUTANHk9FOLnPp9Sr8owDGbOnMk3v/lNPv3pT2fttu9CCCEYMWIE48eP
        JxQK0dDQoDS9IYiMYc12OqnKsWB7NpwIJuJWJ8NhlbHFj4ANcFqsBHIwxMxkLQshqMjP59su
        l91rvR9YlsXeaJTHfD7eUVj3p2katbW1PPLII9x55514PMoGa2eM8vJyJkyYgGma1NfX09XV
        deFv6iMtpslUh4MpDgeuHBIri8z2tgLpBn0AHDFNguriit3A8/BxsfohsvFVUuhCML2oiId0
        PaMFlrlGl2XxP8Eg/+H3996AegAIIaipqWHZsmXce++9OetR9UZpaSkTJ07E5/Oxf/9+ZVnv
        IeRJ02yHg4oc864yLVYAR5GukE9dkD0f+HfAOvOwboQKy4YQzDAM+xSwnxyMRlkRCNCpcPs3
        ZswYHnjgAZYuXUpx8eBLIqmuruYLX/gCV199tVKP8Z1QiM3hMD051EpGQ1FBb5JUAw615Usj
        QWZAJTSlBDm3K2mcdnC93wTj9X8qg+oVFRUsXbqU++67j/LycmV2s426ujruv/9+Zs+erayn
        0knL4uVgkMPqinJTjhAiKzLwRwOGpqnsb+UApsBpsZqHok4TbqeTaSoMDSGaYzHeC4eVeVUu
        l4srrriC+++/n1GjRimxma0IIVi8eDGf/exnGTdunDK7b4XDvB8O05NDAzgSBc2ZpBIZuzIM
        pQ2XJ8FpgbpMhUUhBIUuF5NVGBsiWJZFfTTKWoWJjolcqilTpiizmc3k5eVxxx13sGTJEmUp
        Ga2myapgkCM55F3pZF6svMhtmsvpVGl2ApzOs5qqwqIGjHY6k4/SDyF8lsWOaJQ9io56S0pK
        uO6667j66qvR0lA6EgqFaGtto6mxic7OLsLhMJFwBNOM4XK5KS4porikmNLSUoqLi3E4U1PS
        U1VVxWc/+1kOHjzIypUrCSoI8L4RCnFHJMI4w8iJk0FdCMhwnE0gg0wHHA661CWHfkyslKRE
        6UCdXWLTL47FYrwTCqEiWqXrOnPmzOGuu+5KadJnOBymob6B3bt2c/hQPQcPHOTwgcO0trUR
        CgYJhcLEojE8+XkMLxtOeXk5VSOqGF8znilTpzBxUg2lw0tV9+1m+vTpLFmyhJ07d7Jr166k
        7TWbJhvCYS51OhmpdluTErLBswIYhfIg+2g4LVZKIrC6EIzPwULQTBGzLA5Fo6xXFFgfPXo0
        t912G3PmJF2L3iuhUIjDh+rZ9N4m3nl7HZs3bKL+cD09PX3riFA6vJRp06dy0ZyLmLdgHhcv
        mEdlVaUyD1DTNBYvXsxrr73GwYMHldQQbgiHORaL2WLVD0YDejztQ5FnVQmnxUpJAo4uhBrV
        GyJ0mCZbIxElcRG3283ChQu59dZbcaqNF2BZFsebT7D2rbWsWrmKd95ex9GGo/1+Iba1tvH2
        m2t55611TJw8kRtvuYGbbrmRGbNmUFBYoGStI0aM4Morr2T9+vXs3bs3aXu7IhGaTJOYZWXF
        adv5yJYhrqOQwqmw7GY4nBYrNTMCNc0Wq35wNBbj7VBISSLfqFGjWLx4MWPHjlVg7TTRSJR9
        e/fxp+eX88L//SN7du1J+t3SNE327NpDw5EGPnz/Q+665y6uv+k6Ro5KfgB44nRw1apVHD58
        mHCSXmubZXEwGsVnWVlfL5gtuVajkGtRGDP1Ag4DKYJKop6Grtti1UeilsXhWEzZSK2JEydy
        ySWXKLGVIBQM8f7mD/jtE0+y6s+raG1pVWq/x9/DW2+8zZH6Bo4fP869n1tK9djqpLPGR48e
        zeLFi9mwYQMHDx5Mep3bIxFaTJOiLA9xZMvqSpEdEQxdVxKLRTpVxRqyxEbJ/9MWq77TbVns
        iT8EyVJYWEhdXd2pYQwqiIQjvL/pff79337OC8+9oFyozuTQgUP813/8lid+9Rv279uftOem
        aRpXXXUVF110kZJ8n+2RCC05kMIgMjxDMIET2TzdUCvuVRqomewukH3XUz9eYHDQbprK0hXG
        jh3LggULlLUjjkajbNuyjV8/9h+sXrVaSRrAhTh29BhP//ZpnnnqWY4dPZa0vfHjxzNv3jzK
        ypLuJcm+aJTmWIxYDpTfZIt3NQLpvKg0qSH7xSSNEIJiw1BTszME6DJNGhS8W+u6zsSJE5k7
        d66CVUkOHjjEk//5FK+sXJWy3ue9ceJEC8///nlW/XkVXZ3JdVLQNI2ZM2cqyeA/GW8z3Z0D
        YpUthdclyPQFhesZaaAoIRTLIhaLsSKNL+5cZnckwgEFntWwYcOYNWuWsrKars4uXn35VVa+
        uBJfd2pHYfXGwQOH+P3vnqN6bDWLrlqUVF/4yZMnU1VVpWRdO+JbweIciFtlcoZgAg+ozqMb
        ZxCvu0kWE2jw+/muCmNDAJ9lKfGsxo4dy7x585ScvJimydYPt/LSiy/R3Hw8aXsDZdPGzaxY
        /hITJk5g3PiB1/uNGDGC6upq8vLykvYQ14fD/NLvZ+QZD6AAOCtOJM76KL9E9PpvH/vYx685
        778DftP8RIuhM7/mXN/XF9uCj3tu57N7GHmIpJDxBor6rgN0RqNsU2XMpk9UVFQwebKaaswT
        x0/w2qrVvL/xAyX2BkokHGHN6jVcfsVCRo8ZPeAgudPpZNKkSZSVlXHkyJGk1rQnFmOfzydj
        QhcSlrP+PfH5uf69L8LUl3sJZE6cdda/nf19vX7ehzWJC3zdmZ93IbvmKUoKBRhtgD0wOVdJ
        TFFW1QJm5/ZdvP3m2pSPb+8Lhw8dYt3adcy/5GLGjB0zYDtTpkyhqqoqabECuXsw4cL1dzkQ
        28pBKjSwuw/nKh6Ph7KyMiWTkwOBADt37GT3rt0KVpY8sZjJO2+v46NtHyVlR2XcyiajeDU+
        OY7LJkcoKiqiqqpKyYnL0YZjbP1wK91d3QpWpoYD+w+wd/e+pOJNlZWVVFVVKS9Bskk7hkb2
        pGbY9JOEWKng0IFD7Ny+U4ktVYRDYQ7sP8CJ5hMDtuFwOCgpKVHifdpkFGELVQ5TVFTEiBFK
        Wudz4vgJGo4cVWJLJfv3HeDo0eTW5Xa7k0qBsMkKrGypfbQZAKo8q0g4QntbO50dnQpWpZbG
        o8doOZFcqY8tVoMDexuYw7jdbgoKkm+t0tXdRUtLi8rBlMro7vYRSPJ00harQYG9DcxlTNMk
        piCxNOAPZFVg/UzCoTCRJDtT2GI1OLDFKoeJRCJKaveEJtLSr30ghMIhJWKleNqKTQbQQFXL
        GZt0E4lElHREcDqduN3ZWYKuaxpakhsAl8tle1a5j6kBqe//YZMSwuGwEs/K6XTicqtpL6Oa
        ouJivAXJ5S1HIhEl22WbzGKLVQ6jyrPKy8uTY7Ky0PsoKy+juKQ4KRutra10d2dnTM6m72jw
        iSJtmxxBVczK4XRQNbKK8ors6/OqQqyam5vp7My+tAybfmFpoGRegU0GCIfD+P3+pO0IIRg1
        aiQTJqpri6yK6nHVVFZVDvj7Q6EQJ06cyIribJvkyM4jIJs+0dHRQWNjoxJbo8aMYuKkGiW2
        VFEyrIRpdVOT8vja29s5efKkHbMaBCg7zxVCKOsBPtixLItoNJr0A9Ta2sq+ffsIh8NJF+qW
        V5RTN2M6w8uGp3Q4RH+YNn0aU+umJvW6sreAg4aogaKYlRCCwkIls1IHPaZp0tPTk/TWJBAI
        cOTIEZqamqiurk7KltvtZu7Fc5g3fx4vv/RyUrZU4HA4mDd/LpMmJzfPpLm5ma6u5Pq5g+zp
        7na7+5SP1peGc719TV8b1Z3v6yzLGvD9k/m6c32tQo82YAAdqqyVlJSc+mWe6ih4no99+bdk
        vvdsGwNZSzLfe66PlmVx9OhRPvgg+Y6cTU1N7N69O2mxApg0eSJXXHk57737HifbTyZtLxmm
        zZjGZZdfRunw0qTs1NfX09qavKc4YsQI5syZQ0nJx+c3JR7QMx/U/n5+vj/35e/P/jwQCJya
        hHwusTmfnQutra9rAXjvvfcIhZT4Q90GoKTU3uVysWzZMoqL5cnNhR7+C33sz9ef63vPJTjn
        +7e+ilVf/x/nsrlx40bq6+tpa2sjGRJidf311ydlB8Bb4OXyRQtZ9/Y6/vw/L6sa/d1viouL
        uOW2m5k3f25SQwd8Ph/bt2/nxImBt5hJMGfOHL785S8zZszprqV9FZyz6c/f98XmmX8Xi8Vo
        a2s7Ved5Ic+or2s+37+db01btmxRJVYnDOCQCkuGYXD99dczZcoUFeYGPW63m+XLl/POO+8k
        Zae1tZW9e/cSCoWUxAwn107mrnvu5PCherZv2560vf4ihODSyy/luhuvTdqr2rVrFzt27FBy
        EjhlyhRmzZqlrCVPqgiHw5w4cSIritKTLZM6iyMaisTKNE2am5tVmBoSlJWVUVdXl7SdYDDI
        4cOHlfQYB9kqefHVi7l76V1UVlYosdkfZs+ZxWfuu5faabVJdUC1LIt3332X/fv3K1nXyJEj
        lXS4SDWZ8oZ7o7OzU2XMar8GKDn7tiyLpqYmFaaGBKWlpdTV1SlpSbxv3z7WrVunYFWSsvIy
        br/zdpZ8+lNJezf9YVrdVB78yoMsvnoxHo8nKVutra188MEHHD+e/Egxr9fLiBEjkl5TOojF
        YionyiRFc3OzyrXs1gAlCmOaprJ396FAfn4+48aNUzKZpqGhgTVr1ijLuQIYP2EcX/zyAyz9
        7D1p8bCm1E7mi1/5IjffdhMlw0ou/A0XYMuWLezevVvJVqSmpoaKigrVQztTgmmaWSNW9fX1
        Kj29A8rEKhaLcfjwYRWmhgSaplFeXk5tbW3StoLBIJs3b2bt2rUKVibRdZ0ptZP58kNf4vMP
        3k/1uORPG3vD5XJx+aLL+ca3vsGSu+6grLwsaZuxWIz169dz8OBBBSuEefPmZX2sKkE2Jb8e
        PnxY5XqOaUAbkLRF0zRpaGhIfklDCFVxK4BDhw7x+uuv09LSosQeSEGdMHECD3zpAf76b/+K
        a66/hoJCdXGb8opy7r73Lv7mO9/ijrtup0KRB7dnzx42bdpEe3t70rby8/NZsGABlZUDL/lJ
        J9nkWR09elTVWqLEUxfCgB9IKqPTsiwl8YGhxPDhw5k2bRqapiXtLvf09LBp0ybWrVvHHXfc
        oWiF8nRudPVo7vnMp5k2fRqr/ryK115Zze6du+jpGVgRdXlFOfMvuZjFVy9i8VWLqZlYg+FQ
        U0zh9/t58cUX+eCDD5RsQaZPn05tbW3OTMfJpgB7c3OzqvX0AGbiFdKOArFS8U42lMjLy2PC
        hAlUV1dz6FDyh7L79+9n9erVXHHFFQwbNkzBCk+T783n4gXzGDd+LJcuvIQtH2zlww+2sOX9
        LRxtOHreo3IhBEXFRYwdV83UuqlcPH8eF19yMTWTasjPz1e6zvXr17Ny5Uplhz2LFi2iurpa
        yUFIOsgmz6q1tVXVWjoAKyFWx4GxyVizLIvu7m5isVhOBCKzAU3TqK6uZuHChUrEyufz8fbb
        b7N69WruvPNO5b8HIQTlFeVcc/01LLh0AYcOHWbv7r0cPdJAy4lWWlpaaG9rJxKO4HQ5cbpc
        5Hs8VFRVMHZsNaPGjGLchHGMGj0qJZ7KsWPHeOGFF9i2bZuSh6S8vJy5c+cyfPhwBatLPZZl
        ZVXMqqurS5VYtcDpQuajwPxkLYbDYVpbW6moSH9+Tq4ycuRIrrzySl566SVOnky+xGXfvn08
        88wzjB8/nrlz5ypYYe94C7xMn1HH9Bl1hMNhuru66TjZQWdnF9FoFIfDgcPpwO12MWzYMIqK
        i1L6JhaNRnnllVd4/fXXlTXamzt3LjU1NTkzzdk0zazaBvr9flVidQxOi5WSY5NYLMbOnTtt
        seoHHo+Hiy66iMsuu4yXXnopaXvBYJC1a9fyu9/9jsrKSkaNGqVglefH6XRSOrw0rTlZZ/PR
        Rx/x4osvKjuR1nWdK6644mPlNdlONBrNmi1gd3e3ygz2w3C6n1W9CovRaJTNmzerMDVkEEIw
        btw4brrpJmUZ0u3t7axYsYI//elPSprzZTsnTpzgueee47333lP2gIwdO5aZM2dSVFSkxF46
        yCax2rZtm8qSn31wWqwOq7AYjUZ57733VJgaUhQUFDBv3jzmz096J36K+vp6nn76ad54442s
        2hqo5uTJkzz77LO88MILStM2Fi1aRE1NTU7FXyORSNaI1dq1a1WK1UdwWqx2qbAYi8X46KOP
        BvXDkQqEENTU1HDzzTcrCzybpsm2bdt46qmn2Lp1qxKb2UZ3dzfPP/88jz/+uLIEUIDKykqu
        uuoqRo4cqcxmOsgmz2rr1q2qxMoEdsBpsToGJN1O0bIsWltblbTkGGoUFRUxf/58pUHxQCDA
        m2++yWOPPTboBCsQCPDiiy/yq1/9it27dyt7gxRCcPPNNzN//vycya1KkE1i1dDQoOp30o1M
        rTolVmEUeVeRSITt29PfWiTXEUIwadIkbr75ZqWnT21tbSxfvpyf/vSnbNy4cVB4veFwmD//
        +c889thjfPTRR0qP6+vq6rjjjjsYPXq0MpvpwDTNrElbaG9vx+fzqTJ3ALDgtFhZwLsqLEej
        UTZt2qTC1JCjpKSESy+9lIsuukip3dbWVpYvX86Pf/xj3nnnnax5UQ+EQCDAK6+8wqOPPsoH
        H3ygtGeSx+Ph7rvvZt68eTk3TyCb4lWbN29W+XtZn/jkzBoHJZHxaDTKhg0bVJgacmiaxtSp
        U7nzzjvZuXOnkt7hCTo6Onj55ZcJBAIEg0GuvPLKrBxqej6amppYsWIFTz31FB9++KGqDpSn
        WLRoETfccANlZckXU6ebbNoCrlu3TqVYrSTuWZ0pVsk3BEcG2Xfs2GFnsg+QYcOGccMNN/D+
        ++/z3HPPKX0BdnV18frrrxMMBvH7/Vx77bV4vcmNZk8Hpmny0Ucf8fTTT7N8+XIOHjyo3Dsc
        OXIkn/70p6mtre3TUIhsI5s8q+3bt6v6/cSAU57PmWJ1FFmDk9T420SNYHNzc86dpmQDiZPB
        ++67j4MHD7Jx40al9v1+P2+//Tbt7e3s2LGDO+64g9ra2qx9Y/H7/bz55ps89dRTvPnmm0qG
        P5yNruvcdtttLFq0KCfEuzeyRawSTTgVxUZPcsZAmzNfoSZwK5B0ZNEwjFN5Kjb9xzAMhg8f
        jmEYbNmyRVn5SIJoNEpTUxM7d+7kwIEDRCIRKisrs+5BPXLkCM888wyPPfYYa9euVbotPpOL
        LrqIhx56iJkzZ2ataJ8P0zTp6urKilhkc3Mzv/3tb1Vt0bcA/0V8G3jmb0YAU4BLk72DpmmM
        Hz+eRYsWJWtqyOJ2uykvL6enp4ctW7akZACAz+fjwIED7Nixg2PHjuHxeKioqMhoLMuyLBoa
        GlixYgW/+c1veO6559i1a5fq4QOnKCkpYdmyZUorCNJNOBzG7/dnxUnv66+/zmuvvabq9/UM
        sDrxhzO3gRaKguyRSIS33npLhakhixCCUaNGsXTpUg4cOMDy5ctTcp9wOMyuXbtobGxk27Zt
        XHvttVx99dVMnTo1rUNrTdPk8OHDvPHGG6xZs4bNmzdTX19PMBhM2T0dDgdLlizhlltuobQ0
        c3WNyRIOh7NiCwjw7rvvqnxjeYm4VwWfHB//Yfwfk2reE4vF2LVrF8eOHbPjVkmg6zpTp07l
        85//PPX19Xz44Ycpu1dnZydr165lz549vPbaa0ydOvVUCdCECRNSdpQfiUQ4cOAAb7zxBm+9
        9Rbvv/8+DQ0NhMPhlNwvgaZp3HTTTTz44IOMHz8+Z/pV9UY4HM4KrwpkcF3RLiACfCyT+Wyx
        OoYMaiXdua27u5u1a9eydOnSZE0NaTweD5dffjn3338/jY2NKe3Gmhin1tzczMaNG1m9ejU1
        NTVMnz6d+fPnM3v2bEaOHJlU0mokEuH48ePs2bOHPXv2sHfvXvbt28fOnTs5duxYyrZ7ZyKE
        4Oqrr+bhhx9m9uzZOdMCpjcsy8oaz6qpqYnjx4+rWksrskPoKc4WqwiwE1iY7J1CoRArVqyw
        xUoBw4YN4/bbb6e+vp4nnnhCZXbwOQkEAuzbt+/UmK9XXnmF6upqKioqKC8vp6qqisrKSqqq
        qqiqqqKsrAyn00koFCIYDJ7K50p8fvLkSQ4fPszevXupr6+nqamJpqYmTpw4QSAwsPbIA+Wy
        yy7jkUce4ZJLLsm5kpqziUQiWRFYB07l8SliJ2dsAeGTYmUB61AgVokODCdPnqSkJPnRSkMZ
        IQSjR4/mgQceoLu7m2effVbJlOG+0tXVxbZt29i2bRu6ruP1eikqKjp1FRcXU1BQgGEYRCKR
        j13hcJhIJEJPT8+putF0rv1s5syZw8MPP8zixYuz7vRzIGRLygLAqlWrVG7f36QPYvUW8O1k
        72RZFm1tbWzYsIEbbrghWXNDHsMwmDJlCl/72tdwOBw8++yzdHYmXXveb2KxGJ2dnRm5d7JM
        mzaNhx56iOuvvz6thwepJFu2gJ2dnSpHb1nAi5wlVr0llXQAXwHcKu6an5/PzTffrMLUkEfX
        dUpLS0/lr+3bty+jXkouMWHCBB5++GHuvPPOnD75OxPLsujq6kpLnO9CrFy5klWrVqlaSyfw
        95w1IrA3sQoClwGTkr2jaZr4fD6++MUv5lwdWrai6zrDhg2jpqYGwzA4cOCA8qTRwca4ceNY
        tmwZS5cupby8PKdP/s4kGo3S3d2dFSeBP/rRjzh06JCqtawBfkcfPCuAPOA2FXeNRqNcffXV
        OddyI5vRNI3i4mJqampwu90cPHiQjo6OC3/jEGTGjBk8/PDD3HPPPVRVVQ0aoQJ5CBIIBDK+
        DQyFQvz4xz9WGRr4Nr20rDqXWLUDy/hkTKvfCCEoKyvjqquuStaUzRkIISgqKqKmpoaCggLq
        6+tTUjeXq7hcLm644Qb+8i//kltvvXVQeVQJurq6Up6P1hfWrFnDihUrVK3FD/wl8IljxXOJ
        VQ9wAwrqBE3TpKenhwceeCAnq9mzGSEEXq+XCRMmMGzYMBobG5UN98xlKioquO+++3jkkUdY
        uHAhxcXFg06oYrFY1tQD/vSnP2XPnj2qtoCbgV8ja5U/xvmqNkuBa5K9cyJp7ZZbbqG8vDxZ
        czZnIYQgPz+fcePGMWbMGEKhEA0NDVkRdM0Es2bN4uGHH+YLX/gCtbW1uN1KzomyjmAwSE9P
        T8bjVaZp8sMf/lDJzMs4/4RsV/WJve25xMpCRuS/SpKlNwlKS0vtwuYUkpeXR3V1NdOmTaOy
        spK2trYh1Qvf7XZz00038fWvf53bbruNESNG5GQHhb7S3d1NKBTKeLxq48aN/OEPf1DVZSEE
        PIzsu/4Jzvfb7AbuBJJumxiLxTh58iRLly4dtO902YDD4aCiooLa2lqmTJlCfn4+jY2Nacl4
        zyQjR47kC1/4Ag8//DCXXHIJRUVFg27bdyaJljDZ4D3/7Gc/O9VsUwE7gZ/SyxYQzi9WFlCN
        gpYxlmURCASoq6tj6tSpyZqzOQ+JbeHYsWOpq6tj/PjxBINBmpqaUtJmJpN4vV6uuuoqHnnk
        Ee69914mTZqUc73TB0IoFMLn82V8C9jZ2cmPfvQjlVvAnwFr6WULCOcXK5CB9i+qWEXi3WDp
        0qV2oD0NJPKxJk6cyPTp06moqKClpWVQnBgWFRVx1VVXsWzZMj7/+c9zxRVXUF5ePmReV36/
        n2AwmPEt4LPPPsvq1atVeXhRZDL6OZXvQr5yEXLAoJI+L5WVlaxYsYJ58+apMGfTR2KxGC0t
        LWzatImXX36ZV155hcOHD2f8xd5fhg8fzsKFC7nxxhuZN28eEyZMoKCgYFBv+c7GsixaWloy
        nl9lmiZLlixh+/btqjy8/cBUZDOFXrmQZxUDaoHZKlYTjUZxOBzceOONKszZ9BFN0/B6vYwd
        O5YZM2Ywd+5campqEELQ0dGR0gZ3KqisrOTWW2/loYce4jOf+QxXXHEFY8aMwe12DymhAlm4
        3N3dnfGUhTVr1vDcc8+pfO38F/Aa59gCwoU9KwHcAqxQsZrEIM/XX3/dbsqXQaLRKO3t7dTX
        17Nnzx42bNjA22+/zZ49e5SPtxoohmEwbtw4Fi9ezJVXXsmsWbOorq7G4/FkemkZJVFEnul4
        1Ze+9CXWrFmjckT8TOQubsBiBfI08EMUbQULCgr4wQ9+wLJly1SYs0mSYDDI8ePHOXz4MDt2
        7OCdd97h3XffVTn+u08IIRg+fDhTpkyhrq6Ouro6Jk6cyIQJExgxYoR9iozceiW2gJlk//79
        fO5zn1PZCPIwcgd3XjetL2JlAP8KfCP5NcnA74IFC3jttddyvvHZYMKyLHw+H8eOHePQoUPs
        2bOHnTt3cujQIY4ePUpTUxNdXV1K4yTDhg1j8uTJ1NXVMW3aNMaPH09FRQVlZWWUlZXh8XiG
        TNC8LwQCAdra2jJ+qvu9732P3//+9yq3gP8L+D5ndVk4m76IlQBmIIdJKHl7Gz58OE8//TTX
        XXedCnM2ionFYvh8Ptra2ujo6KC7u5uuri7a2tpobGzk2LFjp67Gxkba2tpO1YU5nU7cbvfH
        rry8vFOfFxcXM2LECGpqahg/fjyVlZWUla99KlgAABbnSURBVJUxfPhwvF6vLU7noa2tDZ/P
        l9HAeldXF3fccYfKA5oeoA44dKEv7EuhsgXsRY7EuSW5dUm6u7t58sknbbHKUnRdP9UFNEGi
        bMrn89Hd3U13d/epz4PB4Knja8Mwer10XccwDNxuN16vl5KSErxe76DOMldJNBrNikZ7f/zj
        Hzlx4oTKdaxCDli+IH3tqhACngBuRkH5TTgcZt26dezatYva2tpkzdmkASEELpcLl8vVa/O6
        xIt3qJ3OpYtgMJjx7Z9pmixfvlxlzMwEfojMsbogffW5TeAdZLQ+aRK5Iv/5n/+pwpxNFiCE
        sIUqRSQqQDJ9AvjWW29x5MgRlev4CDluq09uWn8CBJ3I7n1KCAQCrFixgq1bt174i21shjDh
        cDjjW0DTNHnqqadUd6X9EdDnJlj9Easo8AdkY76ksSyLI0eO8Nhjj2X8HcPGJpsJBAIZTwJ9
        4403+Oijj1RuRZuR8ao+/8f6e/RyFFA2xzwUCvHqq6/y3ntKptbb2Aw6YrEYwWAwo2/okUiE
        3/72t6onGj2FHE7TZ/orVhHgN/QxIHYhLMuiqamJn//85xkPHtrYZCOBQCDjrWCWL1+uciw8
        yOTPJ+injvRXrCxkUOydfn7fOQmFQqxdu5bXX39dlUkbm0FBoiV4Jr0qv9/PM888o7on2mrg
        CH0MrCcYSAZeD6D0GK+lpYVf/OIXGS8jsLHJJoLBYMYD67/73e/Yv3+/yphZIl2h3+7iQMQq
        hlTGwwP43l4Jh8Ns3LiRlStXqjJpY5PTWJaF3+/PaGC9paWF5cuXqx6kuwvYwjm6gZ6PgdY2
        tKIwjQGgvb2dX/7yl3R1dak0a2OTk4RCoYx7VU888YTqvCqAf6OXMVt9YaBiFUVG8xsH+P2f
        NBiNsnXrVp5//nlVJm1scha/35/RQ6eDBw/y2muvqQ7NHAFeZoAHdAMVKwuoB341wO/vlY6O
        Dh5//PEhNZXFxuZsQqFQxifX/PrXv6apqUn1Gv4ZuSsbEMmUuEeA/0YWOSshFouxc+dOfvnL
        X6oyaWOTc/T09GTUq/rggw9Yt26d6g6yO4AXSSLtKdmSd3/85jclaecUkUiExsZGpk2bxrhx
        41SZtbHJCSKRCF1dXRkTq1AoxD/90z+xY8cOlbEqE1iGbOI5YFct2eZBEeBPyJHPSjBNk0OH
        DvHDH/5wUExisbHpDz09PRlNAn3yySfZtGmT6jWsBdbQj9Ka3lDRTCiAHIj6KRRNb47FYrS2
        tqJpGosWLbKr+W2GBAmvKlNitXXrVn72s5/R3NysMlYVQY7z20sSXhWoESsTWZQ4F1C2bwuH
        wzQ2NjJ16lTGjx+vyqyNTdbS1dWVsRFbPT09fO9732Pr1q2qc7teQB7EJT2JRFWbxhDQAnya
        5LeWgEyK6+7uprGxkeuvv578/HwVZm1sspJQKJTRWNWjjz7KypUrVacq9AAPAg0k6VWBOrGy
        kEeSU5BTKpQQi8Voa2sDYPHixfZ20GZQYlkWnZ2dGZvfuGHDBh577LFUpAz9Evg9Ayit6Q2V
        DbAjyCTRpYBDldFwOExTUxNTpkxhwoQJqsza2GQNgUAAn8+XkdKarq4u/vEf/5GdO3eqvn8b
        8BCgbF6XSrGykHPqR6FogjPY20GbwY1pmnR0dJyaDpRufvKTn/Dqq6+mwqv7R+AVFLWTArVi
        BdK7agDuBpQNBUxsBy3L4sorr7S3gzaDBr/fj9/vz0gbmDfffJMnnngiFSlCh4BvoaircALV
        YmUBXUABcJlKw4ntYE1NDRMnTlRp2sYmI0SjUTo7OzPiVbW3t/P973+fPXv2qBZKCzkQeT1J
        5lWdTSqGtkWBg8ClwAhVRhPbwUOHDnHxxRdTXl6uyrSNTUbo7u6mp6cn7akK0WiUH/zgB6xZ
        s4ZQKOmMgrN5C/g/yNxLpaRqwmQ3Mth+OwqD7aZpcuLECRobG1m0aBFer1eVaRubtBIOhzOW
        APrkk0/y3HPPqe6pDvK5/xIKEkB7I1ViZSJPATxID0sZ0WiUxsZGOjs7ufLKK3E4lGmhjU1a
        ME2Trq4ugsFg2r2q1atX86tf/Ypjx46pvrcF/L/ACvoxXuv/b+/cg6q80zv+OccDBxAiiat4
        jwkmNfFshJWN9dJkaxtj0jQmmWYynYy9TJvs2m7T2W3/22mnI0piOs0Qdzqx052dBCPbpKsh
        25hJM8YqrnhBwQtyuBxRROQqCAfOOZxr/3h4AS9EwfdyzuH3mfnNQUbe33uA98vzPL/nMhGM
        nN0dRNzBVcB8XS8cDNLS0oLdbmfVqlUq4K5IKAYHBy1JVaitreXdd9+lvr7eiL33Iy1gevW+
        sIaRYgUSbG8FXkJHdxCkPKC5uZmcnBxcLpeel1YoDCMUClkSVO/o6KCwsJBTp04Z4Xr2Iu5f
        PZNoV3y3GC1WmjuYhs6ng1rW78WLF3G5XCxcuFDPyysUuqO5f2bX//l8PgoLC40KqMeAnyI5
        VYYG4IwWKxh1B1ciCaO6EY1G6e7uprm5mTVr1nD//ffreXmFQlescP8ikQjvvfce+/bt03uc
        lsZvkDHwExpYOhnMECuAAWSa80tAqp4XjkQidHR00NHRwbp160hLS9Pz8gqFLljl/u3atYvS
        0tKRGlud6QR+CFzAgNO/mzFLrKLIG0sF1up98WAwSGtrK36/n6effhq7XZfGDwqFLljl/h04
        cICdO3fS0tJixL5R4MfAAXQsqfk2zBIrEHfwIvB9QPcAUyAQoKWlhfT0dAoKCtQJoSJusML9
        q6urY/v27dTV1Rm1bynw78ghmimYKVYw6g5uRGd3UMtw93g8ZGRkkJeXpwRLYTlWuH8tLS1s
        3brVqJM/kGf4b5FBx6aZimaLVRRp0hcBfoBObZA1YrEYvb29NDQ0kJ6eTn6+bs0fFIoJY4X7
        d/nyZbZs2cLRo0eNOPkDcfl+BPwWk9w/DbPFCkZPB+cA39X74rFYjJ6eHhoaGsjIyFCCpbAM
        r9drqvt36dIltmzZQkVFhZGN/N5FBhwPGrXBeFghViDuYB2QhwHxq7GCNX36dPLy8vTeQqH4
        Vnw+n6m1f5cuXaKwsNBoofoMeBuZuWA6VomV1qivAVgHZOu+gRIshUUMDQ3R19dnlBt2Cxcv
        XqSwsJCjR48aKVTVSOuXRkyMU43FKrGC0XSGy8AGwKn3BkqwFGaj9agyq596U1PTiFAZKI7t
        SDlNFTr3qJoIVooVSICuFegD/hCdJuOMRQmWwiyi0Sh9fX2m9ajyeDwUFhZy7NgxI4XKD7wJ
        /B8GdVO4W6wWK5AxXpeQNshPGrHBWMHKzMxk+fLlRmyjmOL09/czODhoSkC9sbGRbdu2GS1U
        UeAfgL1YEFC/mXgQK5D5Yo1ALmBIz2ItraGurg6n08ny5ctVprtCNwYHB/F6vaYE1BsaGti6
        dSvHjx83Oi72HvCfGNj2ZSLEi1jFEFewDmnWZ0jP4mg0Sk9PDzU1NfT391NQUEBqqq65qYop
        iJkB9RMnTvD2229z8uRJoxNNPwe2Ih1/LQmo30y8iBWMDkq9AKwHDJm5pbWWcbvdNDc3s2LF
        CrKysozYSjEFCIVCXL9+3fCAejQapaysjPfff59z584ZbcGdRU7+GjCwP9VEiSexAjlpaB9e
        zwIOIzaJxWIMDg7S2NiI2+1m2bJlagCFYsJoJ39GB9T9fj87d+7kww8/pKmpyegR853AXwOn
        MDlD/U7Em1iBnDi0IIH338OAE0KNoaEhmpubOXPmDPPnz1cTnxV3TTgc5vr164YLVVdXF++8
        8w5lZWV0dHQYPV9QO/k7gDx/cUU8ihXIN60BsbRWo3MN4Vi0ARRnzpzB6XTyxBNPqMC74luJ
        RCIjFpWR4lFfX09hYSEHDhygr6/P6HSIENLxswypMIk74lWsYLQkJ4IMnTBMsKLRKF1dXZw7
        dw6v16sC74pxiUQiXL9+3fApygcPHmT79u1UVlbi9/sN22eYEDJB+VeY0PFzssSzWIHMIXNj
        gmBpgffa2lpaWlpYsWKFmkuouAEzhCocDrN7924++OAD3G63GakQQUSoSpFx73Fx8nc74l2s
        QASrDjmV+F0MFqzBwUEaGhqoqakhNzeX+fN1nSKmSFA0189IofJ6vRQXF1NaWsrly5fNSC4N
        IkmfcS9UkBhiBeISupFvpqEWFowG3isqKgiFQrhcLuUWTmE0oRoYGDBMqM6ePcu2bdv46quv
        uHbtmhnlOkEkRvVfJIBQQeKIVYwbBctQCwvEHO/u7qaqqora2loeeeQRcnJyjNxSEYdoDfSM
        sqgGBwfZtWsXO3bsoLq6Gp/Pp/setyEI/AQRql4SQKggccQK5BuqxbDABMGKxWIMDAzQ2NhI
        RUUFDoeDxx9/HIfDkPQvRZyhpScYZVGdO3eOoqIiysrKaG1tNTp/SmMIEapPSCChgsQSKxgV
        rFpEqFZisGCB/NJ2dnZSWVmJx+Nh6dKlzJw50+htFRYSDAZH8qj0Fiqfz8fHH39McXEx1dXV
        DAwMmNX2OIBkpn+CnPoljFBB4okV3Ghh2TFJsDQry+12U1FRQWZmJkuXLlU5WUmI3+8fKaHR
        W0RqamooKipi7969ZlpTIEL1FvDfJKBQQWKKFdxqYT2JCYIFUgvW3t7O8ePHuXz5MsuWLWPG
        jBlmbK0wGO0PkhFFyX6/n9LSUoqLi6mqqjLTmgJJsn4L+DVxnEd1JxJVrGBUsM4hHRtWYVAt
        4c1oQdfz589z7Ngx7rvvPnJzc1UsK4HRfqZGtHmpra2lqKiIPXv2mG1NgYjTW0hPqoQVKkhs
        sYLRU8LzgAdxCU3L5NQmQZeXl3Py5Elmz57NokWL1LzCBGNsIF3P3KbOzk5KSkrYsWOHFdYU
        SI+4zcCXmDiM1CiS6anKRAqf/xVYZvbmTqeTefPm8cwzz7B582bVPjlB0HpR6Tnbr7+/ny++
        +IJPP/2UpqYmw0tzxuEb4GfAaeKwKHkyJJNYgQydWA4UIj2xTMVms5GWlsaDDz7Iyy+/zBtv
        vMFDDz1k9m0o7oJYLIbf79c1PuX3+9m/fz+7d++mvr4er9dr6sj4YWLAfwDFSG+4uGrzci8k
        m1iBuLZLkDKCv8LAFjPjYbfbycjIYMmSJWzatIlNmzYxa9Yss29DMQ7hcJj+/n58Pp8u8aNQ
        KMSRI0coKSnh7Nmz9PX1mR2X0ggA/wJ8DLQRR43z9CAZxQpEoOYBf46YwumW3ITdTlZWFi6X
        izfffJNXXnlFFUdbSCwWGxk+GgwG79nti0ajVFVV8dFHH1FZWUlPT49pQ01vQwfyB/pLEjQ1
        4U4kq1iBvLcHgD9GpsjOsepGHA4H2dnZFBQUsHnzZtavX09aWppVtzMlCYVCeL1e3abP1NXV
        UVJSwuHDh+ns7DS6H/qdOA38I3AUGb6SlCSzWGlMZzTw7rLyRlJSUsjOzsblcvH666/zwgsv
        qHpDg4lGo/h8Prxe7z1bU6FQiOrqasrKyqioqKC9vV0XC+0e2QtsQXIOLTPrzGAqiBVAKvAE
        8kN9zuJ7weFwMH36dBYuXMjGjRt57bXXcLlcKuVBZ0Kh0Ehs6l6sqd7eXg4ePMhnn31GXV2d
        bm7kPRIB/g3YiUw1t2xSsllMpadjGrAIaYb/d4DlI23sdjtpaWnMmjWLtWvXsmnTJp566inS
        0y0JsSUNmjXV399PKBSalKjEYjE8Hg/79u3j66+/5sqVK/j9fqsC5zfTDfwTsGf446SLT92O
        qSRWIO93BrAW+Gfg+9bejmCz2UhNTR0Jxmsu4pw5loXZEpJoNEogEMDr9TI0NDSp3KZAIMCJ
        EyfYs2cPp06doqenZ9LXMogvgSKgGimjmRJCBVNPrDRSgMXA3wA/xKLTwtvhcDhIT09n0aJF
        vPjii7z66qu4XC5SUlKsvrW4RQ+R6ujoYP/+/Xz++ed4PB4GBgasPNm7HT3IQdEnyODRpHf7
        bmaqihXIe78f+H0kN8XS4PvN2O12nE4nmZmZ5Obmsn79ep599lny8/OVmzjMvYpUa2srx48f
        59ChQ5w+fZpr164RCASsSOS8E/8LbAOqkNO+KWNNjWUqi5VGKpAL/D3wl8P/jiumTZuG0+kk
        LS2NBQsWsG7dOjZs2MDKlSvJzs62+vZMJxqN4vf7GRgYmJBIhcNhmpqaOHLkCIcOHRrJMg8G
        g4TDYasD5rejF9iO9EifktbUWJRYCXYkJ2sDErh81NrbGR+73U5qaipOp5OcnBzWrFnD888/
        z9q1a5M+xjUZkQoEAtTW1lJeXs7hw4dpbm7G5/MRCoXiJVg+Ht8AW4GTwCBT1JoaixKrG3EC
        v4Mk2P0pJrWcmSw2m42UlBScTicPPPAABQUFrF+/ntWrV5Obm5s07mIoFMLv9+Pz+QgGg98q
        UrFYjJ6eHs6cOUN5eTnHjh2jra2NYDB4x6+NE/qQnMBdQCtT3JoaixKrW7ED30Ey338GJEQl
        ss1mw+FwkJqaOpJ8unTpUvLz88nLyyMvL4/FixcnzJSecDh8i0Ddzk3r7e3F4/Hgdrs5f/48
        brebtrY2/H4/oVBo0qkLFnEQyQWsRFlTt6DEanycwMPAj4A/AxIqOGSz2Zg2bRoOh2NkzZw5
        E5fLNSJgy5cvZ8GCBXHTNDAcDhMIBPD5fCNu3lih6evr48KFCyOiVFtby9WrV/H7/UQiEcLh
        MJFIJBGsp5vpAN4HdqOsqXFRYvXt2JByHRfSbfEVRMQSkpsFLCUlhZycHB577DEWL17MnDlz
        mDt37g2v2dnZhopZJBIZEaj+/n66u7vp6uqis7Nz5OMrV65QX19/Q2JmJBJJVGEaSz9QgrR0
        uYB0TVDW1Dgosbo77MB9yPivnwJ/gAWtZ4xAEzC73X7LstlspKenM2vWrFtELCcnh6ysrAmX
        CAUCAbq6urh69SptbW20t7fT2dlJZ2fnSMa5ZlGNfU0CYRrLEDK44edITZ+PJGvnYgRKrCbG
        NGAm0tjvJ8D3rL0dc7DZbLeImPY6UWKx2IgA3SxKCRRbmiwRJAO9GDiFzBBQIqUwFAewELGy
        mhDTXS21xltR4BDwEvLHLtFnHygSDBuSQPookrjXhfUPhVrxt04DfwHkEOepMIrkx4bUFuYD
        v0RMe6sfELWsXxeQUMEClEjpgopZ6YcdEa1HkXbKfwLMt/SOFFbQCHwE/ApoIckb4pmJEiv9
        0dzDOcBGJEcrnyQ5PVTcljBQjljW3wDXhj8Xs/KmFIqJ4EACqn8ElDGalaxWcqwu4BfAaqSZ
        owqcG4iyrMzBDqQx6iK+inIRE5UYUIOMu/o1cAWxolQKgiKpsCGN/xYCP0ZqwCJYbyGodefl
        B/Yh6QffQQXNFVOIaUjzv+eQbOYerH8g1bp1XUHq9r4HZKBij5ah3EDrsSPCNRt4Gun28AMs
        nHOooBkJlP8GmcXXw6gFrLAIJVbxhX14ZQNPAi8CzyBtatTPyjgiSI3eV8D/AGeRw5AoKhYV
        N6gHIH6xIcI1HfguIlzPAY+h4iV64Ed6mn+B1Ot5kALjKMqCikuUWCUGtuGVBjwCvICkQ+QP
        f05xd/QCRxDraT/qJC+hUGKVmNgR62oesApxGQuAx5Fe8gqhG0kzqAR+CxxDEjaV9ZSAKLFK
        fDSrC+S06mFEuLS1lDiYPm0CvUjc6RQyZOEUcAlpaAejp3uKBEWJVXJiG/OahQzBKEAmUK8A
        lhBHg10nQT9Qx6gonURa9YydqaeEKclQYjW10KywGUg2/cOIKzl/+HXu8Mc5SGDfit+PGHIS
        1wG0Da+rw+sK4EaC4QNj/r9iCqDESjEW7ffBjgjaXG4UM23NZnIJkjEkXjSAiNFVRsVIe21H
        xlFFx3yNQsH/A+XXadpvhtC8AAAAAElFTkSuQmCC
      </shape>
    </shapes>
  </external>
</workbook>
